{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/SearchBar.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { debounce } from \"throttle-debounce\";\nimport { fetchDistanceMatrix } from '../actions';\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw';\n\nfunction constructSearchUrl(searchTerm) {\n  let params = {\n    bbox: '-76,39,-75,41',\n    access_token: ACCESS_TOKEN\n  };\n  let esc = encodeURIComponent;\n  let url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n  url += \"\".concat(esc(searchTerm), \".json\");\n  let query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n  url += '?';\n  url += query;\n  return url;\n}\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.clickResult(this.props.index);\n  }\n\n  render() {\n    const info = this.props.info;\n    const name = info.text;\n    const address = info.properties.address;\n    const coordinates = info.geometry.coordinates;\n    const style = {\n      'backgroundColor': this.props.active ? '#e9e9e9' : 'white'\n    };\n    return React.createElement(\"div\", {\n      style: style,\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, name), \" \", address);\n  }\n\n}\n\nclass AutoComplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitResult = index => {\n      let location = this.state.searchResults[index];\n      console.log(location.geometry.coordinates);\n      let coordinateSubmission = location.geometry.coordinates.map(x => +x);\n      this.props.searchForDistanceMatrix(coordinateSubmission);\n    };\n\n    this.handleEnter = () => {\n      if (this.state.hoverResult > -1 && this.state.hoverResult < this.state.searchResults.length) {\n        this.submitResult(this.state.hoverResult);\n      }\n    };\n\n    this.clickResult = index => {\n      this.submitResult(index);\n    };\n\n    this.changeQuery = event => {\n      this.setState({\n        q: event.target.value\n      }, () => {\n        this.autocompleteSearchDebounced(this.state.q);\n      });\n    };\n\n    this.autocompleteSearch = q => {\n      this.storeSearch(q);\n      this.makeAutocompleteLookup(q);\n    };\n\n    this.makeAutocompleteLookup = q => {\n      // Store the latest input here scoped in the App instance.\n      this.waitingFor = q;\n      fetch(constructSearchUrl(q)).then(response => {\n        if (response.status === 200) {\n          // Only bother with this XHR response\n          // if this query term matches what we're waiting for.\n          if (q === this.waitingFor) {\n            response.json().then(results => {\n              this.setState({\n                searchResults: results.features\n              });\n            });\n          }\n        }\n      });\n    };\n\n    this.storeSearch = q => {\n      const _searches = this.state._searches || [];\n\n      _searches.push(q);\n\n      this.setState({\n        _searches\n      });\n    };\n\n    this.state = {\n      q: \"\",\n      searchResults: [],\n      hoverResult: -1\n    };\n    this.autocompleteSearchDebounced = debounce(500, this.autocompleteSearch);\n    this.incrementHover = this.incrementHover.bind(this);\n    this.decrementHover = this.decrementHover.bind(this);\n    this.handleKeyStroke = this.handleKeyStroke.bind(this);\n  }\n\n  handleKeyStroke(event) {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      this.incrementHover();\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      this.decrementHover();\n    } else if (event.key === 'Enter') {\n      event.preventDefault();\n      this.handleEnter();\n    }\n  }\n\n  incrementHover() {\n    let h = Math.min(this.state.hoverResult + 1, this.state.searchResults.length);\n    this.setState({\n      hoverResult: h\n    });\n  }\n\n  decrementHover() {\n    let h = Math.max(this.state.hoverResult - 1, -1);\n    this.setState({\n      hoverResult: this.state.hoverResult - 1\n    });\n  }\n\n  render() {\n    const _searches = this.state._searches || [];\n\n    const results = [];\n\n    for (let i = 0; i < this.state.searchResults.length; i++) {\n      let r = this.state.searchResults[i];\n      results.push(React.createElement(SearchResult, {\n        key: r.id,\n        info: r,\n        active: i === this.state.hoverResult,\n        index: i,\n        clickResult: this.clickResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Type something here\",\n      type: \"text\",\n      value: this.state.q,\n      onChange: this.changeQuery,\n      onKeyDown: event => this.handleKeyStroke(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), results, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchForDistanceMatrix: coordinatesToLookUp => {\n      dispatch(fetchDistanceMatrix(coordinatesToLookUp));\n    }\n  };\n};\n\nconst SearchBar = connect(null, mapDispatchToProps)(AutoComplete);\nexport default SearchBar;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/SearchBar.js"],"names":["connect","React","debounce","fetchDistanceMatrix","ACCESS_TOKEN","constructSearchUrl","searchTerm","params","bbox","access_token","esc","encodeURIComponent","url","query","Object","keys","map","k","join","SearchResult","Component","constructor","props","handleClick","bind","clickResult","index","render","info","name","text","address","properties","coordinates","geometry","style","active","AutoComplete","submitResult","location","state","searchResults","console","log","coordinateSubmission","x","searchForDistanceMatrix","handleEnter","hoverResult","length","changeQuery","event","setState","q","target","value","autocompleteSearchDebounced","autocompleteSearch","storeSearch","makeAutocompleteLookup","waitingFor","fetch","then","response","status","json","results","features","_searches","push","incrementHover","decrementHover","handleKeyStroke","key","preventDefault","h","Math","min","max","i","r","id","mapDispatchToProps","dispatch","coordinatesToLookUp","SearchBar"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\nimport { debounce } from \"throttle-debounce\";\nimport { fetchDistanceMatrix } from '../actions'\n\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw'\n\nfunction constructSearchUrl(searchTerm){\n\tlet params = {\n\t\tbbox: '-76,39,-75,41',\n\t\taccess_token: ACCESS_TOKEN\n\t}\n\tlet esc = encodeURIComponent;\n\tlet url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n\turl += `${esc(searchTerm)}.json`;\n\tlet query = Object.keys(params)\n\t\t.map(k => esc(k) + '=' + esc(params[k]))\n\t\t.join('&');\n\turl += '?'\n\turl += query;\n\n\treturn url\n}\n\n\nclass SearchResult extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(){\n    this.props.clickResult(this.props.index)\n  }\n\n  render(){\n    const info = this.props.info\n    const name = info.text\n    const address = info.properties.address\n    const coordinates = info.geometry.coordinates\n    const style = {\n      'backgroundColor': this.props.active ? '#e9e9e9' : 'white',\n    }\n    return (\n      <div style={style} onClick={() => this.handleClick()}>\n        <b>{name}</b> {address}\n      </div>\n    )\n  }\n}\n\nclass AutoComplete extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n    \t q: \"\", \n    \t searchResults: [],\n       hoverResult: -1,\n\t};\n    this.autocompleteSearchDebounced = debounce(500, this.autocompleteSearch);\n    this.incrementHover = this.incrementHover.bind(this)\n    this.decrementHover = this.decrementHover.bind(this)\n    this.handleKeyStroke = this.handleKeyStroke.bind(this)\n  }\n\n  handleKeyStroke(event){\n    if (event.key === 'ArrowDown'){\n      event.preventDefault()\n      this.incrementHover()\n    } else if (event.key === 'ArrowUp'){\n      event.preventDefault()\n      this.decrementHover()\n    } else if (event.key === 'Enter'){\n      event.preventDefault()\n      this.handleEnter()\n    }\n  }\n\n  submitResult = index => {\n    let location = this.state.searchResults[index]\n    console.log(location.geometry.coordinates)\n    let coordinateSubmission = location.geometry.coordinates.map(x => +x)\n    this.props.searchForDistanceMatrix(coordinateSubmission)\n  }\n\n  handleEnter = () => {\n    if ( this.state.hoverResult > -1 && this.state.hoverResult < this.state.searchResults.length){\n      this.submitResult(this.state.hoverResult)\n    }\n  }\n\n  clickResult = index => {\n    this.submitResult(index)\n  }\n\n  incrementHover(){ \n    let h = Math.min(this.state.hoverResult+1, this.state.searchResults.length)\n    this.setState({hoverResult: h})\n  }\n\n  decrementHover(){ \n    let h = Math.max(this.state.hoverResult-1, -1)\n    this.setState({hoverResult: this.state.hoverResult-1})\n  }\n\n  changeQuery = event => {\n    this.setState({ q: event.target.value }, () => {\n      this.autocompleteSearchDebounced(this.state.q);\n    });\n  };\n\n  autocompleteSearch = q => {\n    this.storeSearch(q);\n    this.makeAutocompleteLookup(q);\n  };\n\n  makeAutocompleteLookup = q => {\n    // Store the latest input here scoped in the App instance.\n    this.waitingFor = q;\n    fetch(constructSearchUrl(q))\n    .then(response => {\n      if (response.status === 200) {\n        // Only bother with this XHR response\n        // if this query term matches what we're waiting for.\n        if (q === this.waitingFor) {\n          response.json()\n          .then(results => {\n              this.setState({searchResults: results.features});\n          })\n        }\n      }\n    })\n  }\n\n\n\n  storeSearch = q => {\n    const _searches = this.state._searches || [];\n    _searches.push(q);\n    this.setState({ _searches });\n  }\n\n\n  render() {\n    const _searches = this.state._searches || [];\n    const results = [];\n    for (let i=0; i<this.state.searchResults.length; i++){\n      let r = this.state.searchResults[i];\n      results.push(\n          <SearchResult \n            key={r.id}\n            info={r}\n            active={i === this.state.hoverResult}\n            index={i}\n            clickResult={this.clickResult}\n          />\n      )\n    }\n    return (\n      <div >\n        <input\n          placeholder=\"Type something here\"\n          type=\"text\"\n          value={this.state.q}\n          onChange={this.changeQuery}\n          onKeyDown={event => this.handleKeyStroke(event)}\n        />\n        {results}\n\n        <hr />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    searchForDistanceMatrix: (coordinatesToLookUp) => {\n        dispatch(fetchDistanceMatrix(coordinatesToLookUp))\n    }\n  }\n};\n \n\nconst SearchBar = connect(null, mapDispatchToProps)(AutoComplete);\n\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}