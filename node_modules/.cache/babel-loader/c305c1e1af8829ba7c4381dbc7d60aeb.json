{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst BaseWeather = ({\n  temp,\n  imgUrl\n}) => React.createElement(\"div\", {\n  style: {\n    borderRadius: 20\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \" \", temp, \" \"), React.createElement(\"img\", {\n  src: imgUrl,\n  alt: \"weather icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nconst mapStateToProps = state => {\n  let weather;\n  return {\n    temp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n    imgUrl: createIconImgUrl(state.api.weather.weather[0].icon)\n  };\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\nexport default Weather;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js"],"names":["connect","React","BaseWeather","temp","imgUrl","borderRadius","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","mapStateToProps","state","weather","api","main","Weather"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACnB;AAAK,EAAA,KAAK,EAAE;AAACC,IAAAA,YAAY,EAAE;AAAf,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMF,IAAN,MADD,EAEC;AAAK,EAAA,GAAG,EAAEC,MAAV;AAAkB,EAAA,GAAG,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,CADD;;AAQA,SAASE,gBAAT,CAA0BC,IAA1B,EAA+B;AAC7B,mDAA0CA,IAA1C;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,SAAOC,IAAI,CAACC,KAAL,CAAW,IAAK,CAAL,IAAUF,MAAM,GAAG,GAAnB,IAA0B,EAArC,EAAyC,CAAzC,CAAP;AACD;;AAID,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,MAAIC,OAAJ;AACA,SAAO;AACNX,IAAAA,IAAI,EAAEK,WAAW,CAACK,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBE,IAAlB,CAAuBb,IAAxB,CAAX,GAA2C,MAD3C;AAENC,IAAAA,MAAM,EAAEE,gBAAgB,CAACO,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBA,OAAlB,CAA0B,CAA1B,EAA6BP,IAA9B;AAFlB,GAAP;AAIA,CAND;;AAQA,MAAMU,OAAO,GAAGjB,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BV,WAA/B,CAAhB;AAEA,eAAee,OAAf","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\n\n\nconst BaseWeather = ({ temp, imgUrl }) => (\n\t<div style={{borderRadius: 20}}>\n\t\t<h3> {temp} </h3>\n\t\t<img src={imgUrl} alt=\"weather icon\"></img>\n\t</div>\n)\n\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nconst mapStateToProps = state => {\n\tlet weather \n\treturn {  \n\t\ttemp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n\t\timgUrl: createIconImgUrl(state.api.weather.weather[0].icon),\n\t}\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}