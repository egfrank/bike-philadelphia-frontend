{"ast":null,"code":"import { clickMarker } from '../actions';\nimport { connect } from 'react-redux';\nimport MarkerList from '../components/MarkerList';\nconst blueIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst yellowIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst greyIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst mapStateToProps = state => {\n  return {\n    markerArray: Object.values(state.api.stationsByID),\n    selectedMarkers: state.clickedStations,\n    panel: state.panel,\n    distanceArray: state.distanceMatrix.distanceArray,\n    latestCoordinateLookup: state.distanceMatrix.latestCoordinateLookup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMarkerClick: (id, isSelected) => {\n      dispatch(clickMarker(id, isSelected));\n    }\n  };\n};\n\nconst MarkerWrapper = connect(mapStateToProps, mapDispatchToProps)(MarkerList);\nexport default MarkerWrapper;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/containers/MarkerWrapper.js"],"names":["clickMarker","connect","MarkerList","blueIcon","L","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","yellowIcon","greyIcon","mapStateToProps","state","markerArray","Object","values","api","stationsByID","selectedMarkers","clickedStations","panel","distanceArray","distanceMatrix","latestCoordinateLookup","mapDispatchToProps","dispatch","onMarkerClick","id","isSelected","MarkerWrapper"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAKA,MAAMC,QAAQ,GAAG,IAAIC,CAAC,CAACC,IAAN,CAAW;AAC1BC,EAAAA,OAAO,EAAE,sFADiB;AAE1BC,EAAAA,SAAS,EAAE,+EAFe;AAG1BC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHgB;AAI1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJc;AAK1BC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALa;AAM1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANc,CAAX,CAAjB;AASA,MAAMC,UAAU,GAAG,IAAIR,CAAC,CAACC,IAAN,CAAW;AAC5BC,EAAAA,OAAO,EAAE,wFADmB;AAE5BC,EAAAA,SAAS,EAAE,+EAFiB;AAG5BC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHkB;AAI5BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJgB;AAK5BC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALe;AAM5BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANgB,CAAX,CAAnB;AASA,MAAME,QAAQ,GAAG,IAAIT,CAAC,CAACC,IAAN,CAAW;AAC1BC,EAAAA,OAAO,EAAE,sFADiB;AAE1BC,EAAAA,SAAS,EAAE,+EAFe;AAG1BC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHgB;AAI1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJc;AAK1BC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALa;AAM1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANc,CAAX,CAAjB;;AASA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,GAAN,CAAUC,YAAxB,CADP;AAENC,IAAAA,eAAe,EAAEN,KAAK,CAACO,eAFjB;AAGNC,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAHP;AAINC,IAAAA,aAAa,EAAET,KAAK,CAACU,cAAN,CAAqBD,aAJ9B;AAKNE,IAAAA,sBAAsB,EAAEX,KAAK,CAACU,cAAN,CAAqBC;AALvC,GAAP;AAMC,CAPF;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,aAAa,EAAE,CAACC,EAAD,EAAKC,UAAL,KAAoB;AAACH,MAAAA,QAAQ,CAAC5B,WAAW,CAAC8B,EAAD,EAAKC,UAAL,CAAZ,CAAR;AAAsC;AADpE,GAAP;AAGA,CAJD;;AAMA,MAAMC,aAAa,GAAG/B,OAAO,CAC5Ba,eAD4B,EAE5Ba,kBAF4B,CAAP,CAGpBzB,UAHoB,CAAtB;AAKA,eAAe8B,aAAf","sourcesContent":["import { clickMarker } from '../actions'\nimport { connect } from 'react-redux'\nimport MarkerList from '../components/MarkerList'\n\n\n\n\nconst blueIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst yellowIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst greyIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmarkerArray: Object.values(state.api.stationsByID),\n\t\tselectedMarkers: state.clickedStations,\n\t\tpanel: state.panel,\n\t\tdistanceArray: state.distanceMatrix.distanceArray,\n\t\tlatestCoordinateLookup: state.distanceMatrix.latestCoordinateLookup,\n}}\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonMarkerClick: (id, isSelected) => {dispatch(clickMarker(id, isSelected))}\n\t}\n}\n\nconst MarkerWrapper = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(MarkerList)\n\nexport default MarkerWrapper"]},"metadata":{},"sourceType":"module"}