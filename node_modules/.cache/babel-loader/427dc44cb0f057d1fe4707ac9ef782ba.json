{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'; // CONSTANTS\n\nimport axios from 'axios';\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(ENDPOINT).then(response => response.data.weather).then(results => this.setState({\n      temperature: convertKtoF(results.main.temp) + '\\xB0',\n      iconUrl: createIconImgUrl(results.weather[0].icon),\n      weather: results.weather[0].main\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.temperature), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.iconUrl,\n      alt: \"weather icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.weather));\n  }\n\n}\n\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n  height: 300,\n  width: 400\n};\nconst accessToken = \"pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw\";\nconst id = 'mapbox.streets';\nconst mapboxURL = \"https://api.tiles.mapbox.com/v4/\".concat(id, \"/{z}/{x}/{y}.png?access_token=\").concat(accessToken);\n\nclass StationsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stationsList: [],\n      isOrdered: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(ENDPOINT).then(response => Object.values(response.data.stations)).then(data => {\n      const stationsList = data.map(item => ({\n        coordinates: [item.geometry.coordinates[1], item.geometry.coordinates[0]],\n        id: item.properties.kioskId,\n        name: item.properties.name,\n        addressStreet: item.properties.addressStreet,\n        bikesAvailable: item.properties.bikesAvailable,\n        totalDocks: item.properties.totalDocks\n      }));\n      this.setState({\n        stationsList\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Map, {\n      center: position,\n      zoom: zoom,\n      style: mapStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: mapboxURL,\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(MarkersList, {\n      stationsList: this.state.stationsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Stations\"), React.createElement(StationsList, {\n      stationsList: this.state.stationsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction StationsList(props) {\n  console.log(props.stationsList);\n  let stations = props.stationsList.map(s => React.createElement(Station, {\n    key: s.id,\n    station: s,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n  return stations;\n}\n\nfunction MarkersList(props) {\n  let markersArray = props.stationsList.map(s => React.createElement(StationMarker, {\n    station: s,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n  return markersArray;\n}\n\nfunction StationMarker(props) {\n  return React.createElement(Marker, {\n    key: \"marker-\".concat(props.station.id),\n    position: props.station.coordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    key: \"popup-\".concat(props.station.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \" \", React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, props.station.name)));\n}\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExtended: false\n    };\n    this.toggleExtendedInfo = this.toggleExtendedInfo.bind(this);\n  }\n\n  toggleExtendedInfo() {\n    console.log(this.state);\n    this.setState({\n      isExtended: !this.state.isExtended\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      key: this.props.station.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.toggleExtendedInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.station.name), this.state.isExtended && React.createElement(\"div\", {\n      className: \"extended-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.station.addressStreet, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.station.bikesAvailable, \" / \", this.props.station.totalDocks)));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(APIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Weather, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(StationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js"],"names":["React","Map","Marker","Popup","TileLayer","axios","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","ENDPOINT","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","Weather","Component","constructor","props","state","temperature","weather","componentDidMount","get","then","response","data","results","setState","main","temp","render","position","zoom","mapStyle","height","width","accessToken","id","mapboxURL","StationsContainer","stationsList","isOrdered","Object","values","stations","map","item","coordinates","geometry","properties","kioskId","name","addressStreet","bikesAvailable","totalDocks","StationsList","console","log","s","MarkersList","markersArray","StationMarker","station","Station","isExtended","toggleExtendedInfo","bind","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\n// CONSTANTS\nimport axios from 'axios';\n\n\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nclass Weather extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: '',\n    };\n  }\n\n  componentDidMount(){\n    axios.get(ENDPOINT)\n        .then(response => response.data.weather)\n        .then((results) => this.setState({\n      temperature: convertKtoF(results.main.temp) + '\\xB0',\n      iconUrl: createIconImgUrl(results.weather[0].icon),\n      weather: results.weather[0].main,\n    })\n  )}\n  \n  render() {\n    return (\n      <div className=\"weather\">\n          <span>{this.state.temperature}</span>\n          <span><img src={this.state.iconUrl} alt=\"weather icon\"></img></span>\n          <span>{this.state.weather}</span>\n      </div>\n  )}\n}\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n    height: 300,\n    width: 400,\n}\n\nconst accessToken = `pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw`\nconst id = 'mapbox.streets';\nconst mapboxURL = `https://api.tiles.mapbox.com/v4/${id}/{z}/{x}/{y}.png?access_token=${accessToken}`\n\nclass StationsContainer extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {\n        stationsList: [],\n        isOrdered: false,\n      };\n  }\n\n  componentDidMount(){\n    axios.get(ENDPOINT)\n        .then(response => Object.values(response.data.stations))\n        .then(data => {\n          const stationsList = data.map(item => ({\n                coordinates:  [item.geometry.coordinates[1], item.geometry.coordinates[0]],\n                id: item.properties.kioskId,\n                name: item.properties.name,\n                addressStreet: item.properties.addressStreet,\n                bikesAvailable:item.properties.bikesAvailable,\n                totalDocks:item.properties.totalDocks,\n              }));\n        this.setState({ stationsList })\n    })\n  }\n\n  render(){\n    return (\n      <div>\n          <Map center={position} zoom={zoom} style={mapStyle}>\n          <TileLayer\n              url={mapboxURL}\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"/>\n          <MarkersList stationsList={this.state.stationsList}/>\n          </Map>\n          <h2>Stations</h2>\n          <StationsList stationsList={this.state.stationsList}/>\n          \n      </div>\n  )}\n}\n\nfunction StationsList(props){\n  console.log(props.stationsList);\n  let stations = props.stationsList\n                      .map(s => <Station key={s.id} station={s} />);\n  return stations;\n}  \n\nfunction MarkersList(props){\n  let markersArray = props.stationsList.map(s => <StationMarker station={s} />);\n  return markersArray;\n}\n\nfunction StationMarker(props){\n  return (\n    <Marker key={`marker-${props.station.id}`} position={props.station.coordinates}>\n      <Popup key={`popup-${props.station.id}`}> <h1>{props.station.name}</h1></Popup>\n    </Marker>\n    )\n\n}\nclass Station extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isExtended: false,\n    }\n    this.toggleExtendedInfo = this.toggleExtendedInfo.bind(this);\n  }\n\n  toggleExtendedInfo(){\n    console.log(this.state);\n      this.setState({\n        isExtended: !this.state.isExtended,\n      });\n\n    }\n\n\n  render(){\n  return (\n    <div key={this.props.station.id} >\n      <h1 onClick={this.toggleExtendedInfo}>{this.props.station.name}</h1>\n    {this.state.isExtended && <div className=\"extended-info\">\n            {this.props.station.addressStreet}<div/>\n            <h3>{this.props.station.bikesAvailable} / {this.props.station.totalDocks}</h3>\n          </div>}\n    </div>\n    )}\n}\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <APIContainer/>\n      <Weather/>\n      <StationsContainer/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}