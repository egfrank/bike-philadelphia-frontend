{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nconst WEATHER_STYLE = {\n  marginLeft: 100,\n  borderRadius: 20,\n  alignItems: 'center',\n  background: 'white',\n  display: 'flex',\n  justifyContent: 'space-between',\n  border: '0.5px solid #F0F0F0',\n  width: 100,\n  height: 60\n};\n\nconst BaseWeather = ({\n  temp,\n  imgUrl\n}) => React.createElement(\"div\", {\n  style: WEATHER_STYLE,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  style: {\n    marginLeft: 10,\n    textAlign: 'center'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \" \", temp, \" \"), React.createElement(\"img\", {\n  src: imgUrl,\n  alt: \"weather icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  style: {\n    justifySelf: 'flex-end'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"ABOUT\"));\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nconst mapStateToProps = state => {\n  let weather = state.api.weather;\n\n  if (weather.hasOwnProperty('main')) {\n    return {\n      temp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n      imgUrl: createIconImgUrl(state.api.weather.weather[0].icon)\n    };\n  } else {\n    return {\n      temp: undefined,\n      imgUrl: undefined\n    };\n  }\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\nexport default Weather;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js"],"names":["connect","React","WEATHER_STYLE","marginLeft","borderRadius","alignItems","background","display","justifyContent","border","width","height","BaseWeather","temp","imgUrl","textAlign","justifySelf","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","mapStateToProps","state","weather","api","hasOwnProperty","main","undefined","Weather"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,UAAU,EAAE,GADS;AAErBC,EAAAA,YAAY,EAAE,EAFO;AAGrBC,EAAAA,UAAU,EAAE,QAHS;AAIrBC,EAAAA,UAAU,EAAE,OAJS;AAKrBC,EAAAA,OAAO,EAAE,MALY;AAMrBC,EAAAA,cAAc,EAAE,eANK;AAOrBC,EAAAA,MAAM,EAAE,qBAPa;AAQrBC,EAAAA,KAAK,EAAE,GARc;AASrBC,EAAAA,MAAM,EAAE;AATa,CAAtB;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACnB;AAAK,EAAA,KAAK,EAAEZ,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAI,EAAA,KAAK,EAAE;AAACC,IAAAA,UAAU,EAAE,EAAb;AAAiBY,IAAAA,SAAS,EAAE;AAA5B,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoDF,IAApD,MADD,EAEC;AAAK,EAAA,GAAG,EAAEC,MAAV;AAAmB,EAAA,GAAG,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,EAGC;AAAG,EAAA,KAAK,EAAE;AAACE,IAAAA,WAAW,EAAE;AAAd,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHD,CADD;;AASA,SAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC7B,mDAA0CA,IAA1C;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,SAAOC,IAAI,CAACC,KAAL,CAAW,IAAK,CAAL,IAAUF,MAAM,GAAG,GAAnB,IAA0B,EAArC,EAAyC,CAAzC,CAAP;AACD;;AAID,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,MAAIC,OAAO,GAAGD,KAAK,CAACE,GAAN,CAAUD,OAAxB;;AACA,MAAMA,OAAO,CAACE,cAAR,CAAuB,MAAvB,CAAN,EAAsC;AACrC,WAAO;AACNd,MAAAA,IAAI,EAAEM,WAAW,CAACK,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBG,IAAlB,CAAuBf,IAAxB,CAAX,GAA2C,MAD3C;AAENC,MAAAA,MAAM,EAAEG,gBAAgB,CAACO,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBA,OAAlB,CAA0B,CAA1B,EAA6BP,IAA9B;AAFlB,KAAP;AAIA,GALD,MAKO;AACN,WAAO;AACNL,MAAAA,IAAI,EAAEgB,SADA;AAENf,MAAAA,MAAM,EAAEe;AAFF,KAAP;AAIA;AACD,CAbD;;AAeA,MAAMC,OAAO,GAAG9B,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,WAA/B,CAAhB;AAEA,eAAekB,OAAf","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\n\n\nconst WEATHER_STYLE = {\n\tmarginLeft: 100,\n\tborderRadius: 20, \n\talignItems: 'center',\n\tbackground: 'white', \n\tdisplay: 'flex', \n\tjustifyContent: 'space-between',\n\tborder: '0.5px solid #F0F0F0',\n\twidth: 100,\n\theight: 60\n}\n\nconst BaseWeather = ({ temp, imgUrl }) => (\n\t<div style={WEATHER_STYLE}>\n\t\t<h3 style={{marginLeft: 10, textAlign: 'center'}}> {temp} </h3>\n\t\t<img src={imgUrl}  alt=\"weather icon\"></img>\n\t\t<p style={{justifySelf: 'flex-end'}}>ABOUT</p>\n\t</div>\n)\n\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nconst mapStateToProps = state => {\n\tlet weather = state.api.weather;\n\tif  ( weather.hasOwnProperty('main') ){\n\t\treturn {  \n\t\t\ttemp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n\t\t\timgUrl: createIconImgUrl(state.api.weather.weather[0].icon),\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\ttemp: undefined,\n\t\t\timgUrl: undefined\n\t\t}\n\t}\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}