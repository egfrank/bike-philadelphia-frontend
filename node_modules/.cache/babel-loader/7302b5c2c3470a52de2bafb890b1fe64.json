{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { CLICK_MARKER, UNCLICK_MARKER, EXPLORE_PANEL, CLICK_PANEL, SEARCH_PANEL, REQUEST_API_DATA, RECEIVE_API_DATA } from './actions'; // UI Reducers\n\nfunction copyAndRemove(array, index) {\n  // Copies an array without the element at the index provided\n  return [...array.slice(0, index), ...array.slice(index + 1)];\n}\n\nfunction panel(state = EXPLORE_PANEL, action) {\n  switch (action.type) {\n    case CLICK_PANEL:\n      return action.panel;\n\n    default:\n      return state;\n  }\n}\n\nfunction clickedStations(state = [], action) {\n  switch (action.type) {\n    case CLICK_MARKER:\n      if (!action.isSelected) {\n        return [...state, action.id];\n      } else {\n        let markerIndex = state.indexOf(action.id);\n        return copyAndRemove(state, markerIndex);\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst stationsJSON = {\n  3004: {\n    coordinates: [-75.16374, 39.95378],\n    name: 'First station',\n    address: 'First street',\n    bikes: 20,\n    spots: 2,\n    id: 3004\n  },\n  3005: {\n    coordinates: [-75.14403, 39.94733],\n    name: 'Second station',\n    address: 'Second street',\n    bikes: 10,\n    spots: 2,\n    id: 3005\n  }\n};\n\nfunction stationsByID(state = stationsJSON, action) {\n  return state;\n}\n\nconst reduceApp = combineReducers({\n  panel,\n  clickedStations,\n  stationsByID\n});\n/*\nfunction reduceSearchTerm(state=null, action){\n\t// I have no idea\n}\n\n\n// Network Reducers \n\nfunction RequestGeocode(){}\nfunction ReceiveGeocode(){}\n\nfunction RequestDistances(){}\n*/\n// function ReceiveDistances(){}\n\nconst apiDefaultState = {\n  isFetching: false,\n  bikeTimestamp: null\n};\n\nfunction apiData(state = {}, action) {\n  switch (action.type) {\n    case REQUEST_API_DATA:\n    case RECEIVE_API_DATA:\n  }\n}\n\nexport default reduceApp;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/reducers.js"],"names":["combineReducers","CLICK_MARKER","UNCLICK_MARKER","EXPLORE_PANEL","CLICK_PANEL","SEARCH_PANEL","REQUEST_API_DATA","RECEIVE_API_DATA","copyAndRemove","array","index","slice","panel","state","action","type","clickedStations","isSelected","id","markerIndex","indexOf","stationsJSON","coordinates","name","address","bikes","spots","stationsByID","reduceApp","apiDefaultState","isFetching","bikeTimestamp","apiData"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,YAAT,EACGC,cADH,EAEGC,aAFH,EAGGC,WAHH,EAIGC,YAJH,EAKGC,gBALH,EAMGC,gBANH,QAM0B,WAN1B,C,CAQA;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAoC;AACnC;AACA,SAAO,CAAC,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAcD,KAAd,CAAJ,EAA0B,GAAGD,KAAK,CAACE,KAAN,CAAYD,KAAK,GAAC,CAAlB,CAA7B,CAAP;AACA;;AAED,SAASE,KAAT,CAAeC,KAAK,GAACV,aAArB,EAAoCW,MAApC,EAA2C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,WAAL;AACC,aAAOU,MAAM,CAACF,KAAd;;AACD;AACC,aAAOC,KAAP;AAJF;AAMA;;AAED,SAASG,eAAT,CAAyBH,KAAK,GAAC,EAA/B,EAAmCC,MAAnC,EAA0C;AACzC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKd,YAAL;AACC,UAAK,CAACa,MAAM,CAACG,UAAb,EAA0B;AACzB,eAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,EAAlB,CAAP;AACA,OAFD,MAEO;AACN,YAAIC,WAAW,GAAGN,KAAK,CAACO,OAAN,CAAcN,MAAM,CAACI,EAArB,CAAlB;AACA,eAAOV,aAAa,CAACK,KAAD,EAAQM,WAAR,CAApB;AACA;;AACF;AACC,aAAON,KAAP;AATF;AAWA;;AAGD,MAAMQ,YAAY,GAAG;AACpB,QAAM;AACLC,IAAAA,WAAW,EAAE,CAAC,CAAC,QAAF,EAAY,QAAZ,CADR;AAELC,IAAAA,IAAI,EAAE,eAFD;AAGLC,IAAAA,OAAO,EAAE,cAHJ;AAILC,IAAAA,KAAK,EAAE,EAJF;AAKLC,IAAAA,KAAK,EAAE,CALF;AAMLR,IAAAA,EAAE,EAAE;AANC,GADc;AASpB,QAAM;AACLI,IAAAA,WAAW,EAAE,CAAC,CAAC,QAAF,EAAY,QAAZ,CADR;AAELC,IAAAA,IAAI,EAAE,gBAFD;AAGLC,IAAAA,OAAO,EAAE,eAHJ;AAILC,IAAAA,KAAK,EAAE,EAJF;AAKLC,IAAAA,KAAK,EAAE,CALF;AAMLR,IAAAA,EAAE,EAAE;AANC;AATc,CAArB;;AAmBA,SAASS,YAAT,CAAsBd,KAAK,GAACQ,YAA5B,EAA0CP,MAA1C,EAAiD;AAChD,SAAOD,KAAP;AACA;;AAED,MAAMe,SAAS,GAAG5B,eAAe,CAAC;AAChCY,EAAAA,KADgC;AAEhCI,EAAAA,eAFgC;AAGhCW,EAAAA;AAHgC,CAAD,CAAjC;AAOA;;;;;;;;;;;;;AAcA;;AAEA,MAAME,eAAe,GAAG;AACvBC,EAAAA,UAAU,EAAE,KADW;AAEvBC,EAAAA,aAAa,EAAE;AAFQ,CAAxB;;AAKA,SAASC,OAAT,CAAiBnB,KAAK,GAAC,EAAvB,EAA2BC,MAA3B,EAAkC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,gBAAL;AAEA,SAAKC,gBAAL;AAHD;AAMA;;AAED,eAAeqB,SAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport { CLICK_MARKER, \n\t\t UNCLICK_MARKER,\n\t\t EXPLORE_PANEL,\n\t\t CLICK_PANEL,\n\t\t SEARCH_PANEL,\n\t\t REQUEST_API_DATA,\n\t\t RECEIVE_API_DATA} from './actions'\n\n// UI Reducers\n\n\n\nfunction copyAndRemove(array, index){\n\t// Copies an array without the element at the index provided\n\treturn [...array.slice(0,index), ...array.slice(index+1)]\n}\n\nfunction panel(state=EXPLORE_PANEL, action){\n\tswitch (action.type){\n\t\tcase CLICK_PANEL:\n\t\t\treturn action.panel\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction clickedStations(state=[], action){\n\tswitch (action.type) {\n\t\tcase CLICK_MARKER:\n\t\t\tif ( !action.isSelected ) {\n\t\t\t\treturn [...state, action.id]\n\t\t\t} else {\n\t\t\t\tlet markerIndex = state.indexOf(action.id);\n\t\t\t\treturn copyAndRemove(state, markerIndex)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\nconst stationsJSON = {\n\t3004: {\n\t\tcoordinates: [-75.16374, 39.95378],\n\t\tname: 'First station',\n\t\taddress: 'First street',\n\t\tbikes: 20,\n\t\tspots: 2,\n\t\tid: 3004\n\t},\n\t3005: {\n\t\tcoordinates: [-75.14403, 39.94733], \n\t\tname: 'Second station',\n\t\taddress: 'Second street',\n\t\tbikes: 10,\n\t\tspots: 2,\n\t\tid: 3005\n\t}\n}\n\nfunction stationsByID(state=stationsJSON, action){\n\treturn state\n}\n\nconst reduceApp = combineReducers({\n  panel,\n  clickedStations,\n  stationsByID\n})\n\n\n/*\nfunction reduceSearchTerm(state=null, action){\n\t// I have no idea\n}\n\n\n// Network Reducers \n\nfunction RequestGeocode(){}\nfunction ReceiveGeocode(){}\n\nfunction RequestDistances(){}\n*/\n\n// function ReceiveDistances(){}\n\nconst apiDefaultState = {\n\tisFetching: false,\n\tbikeTimestamp: null,\n\n}\nfunction apiData(state={}, action){\n\tswitch (action.type){\n\t\tcase REQUEST_API_DATA:\n\n\t\tcase RECEIVE_API_DATA:\n\n\t}\n}\n\nexport default reduceApp;\n\n\n"]},"metadata":{},"sourceType":"module"}