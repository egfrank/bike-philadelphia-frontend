{"ast":null,"code":"import _slicedToArray from \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/AutoComplete.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { throttle, debounce } from \"throttle-debounce\";\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw';\n\nfunction constructSearchUrl(searchTerm) {\n  let params = {\n    bbox: '-76,39,-75,41',\n    access_token: ACCESS_TOKEN\n  };\n  let esc = encodeURIComponent;\n  let url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n  url += \"\".concat(esc(searchTerm), \".json\");\n  let query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n  url += '?';\n  url += query;\n  return url;\n}\n\nfunction PlaceName(info) {\n  console.log(info);\n  return info;\n\n  const _info$split$slice = info.split(',').slice(0, 2),\n        _info$split$slice2 = _slicedToArray(_info$split$slice, 2),\n        name = _info$split$slice2[0],\n        address = _info$split$slice2[1];\n\n  return React.createElement(\"fragment\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, name), address);\n}\n\nclass AutoComplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeQuery = event => {\n      this.setState({\n        q: event.target.value\n      }, () => {\n        const q = this.state.q;\n\n        if (q.length < 5) {\n          this.autocompleteSearchThrottled(this.state.q);\n        } else {\n          this.autocompleteSearchDebounced(this.state.q);\n        }\n      });\n    };\n\n    this.autocompleteSearch = q => {\n      this.storeSearch(q);\n      this.makeAutocompleteLookup(q);\n    };\n\n    this.makeAutocompleteLookup = q => {\n      // Store the latest input here scoped in the App instance.\n      this.waitingFor = q;\n      fetch(constructSearchUrl(q)).then(response => {\n        if (response.status === 200) {\n          // Only bother with this XHR response\n          // if this query term matches what we're waiting for.\n          if (q === this.waitingFor) {\n            response.json().then(results => {\n              this.setState({\n                features: results.features\n              });\n            });\n          }\n        }\n      });\n    };\n\n    this.storeSearch = q => {\n      const _searches = this.state._searches || [];\n\n      _searches.push(q);\n\n      this.setState({\n        _searches\n      });\n    };\n\n    this.state = {\n      q: \"\",\n      features: []\n    };\n    this.autocompleteSearchDebounced = debounce(1000, this.autocompleteSearch);\n    this.autocompleteSearchThrottled = throttle(2000, this.autocompleteSearch);\n  }\n\n  render() {\n    const _searches = this.state._searches || [];\n\n    const results = this.state.features.map(x => React.createElement(\"li\", {\n      key: x.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(PlaceName, {\n      info: x.place_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, results), React.createElement(\"input\", {\n      placeholder: \"Type something here\",\n      type: \"text\",\n      value: this.state.q,\n      onChange: this.changeQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), _searches.length ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.setState({\n        _searches: []\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Reset\") : null, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, _searches.map((s, i) => {\n      return React.createElement(\"li\", {\n        key: s + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, s);\n    })));\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/AutoComplete.js"],"names":["connect","React","throttle","debounce","ACCESS_TOKEN","constructSearchUrl","searchTerm","params","bbox","access_token","esc","encodeURIComponent","url","query","Object","keys","map","k","join","PlaceName","info","console","log","split","slice","name","address","AutoComplete","Component","constructor","props","changeQuery","event","setState","q","target","value","state","length","autocompleteSearchThrottled","autocompleteSearchDebounced","autocompleteSearch","storeSearch","makeAutocompleteLookup","waitingFor","fetch","then","response","status","json","results","features","_searches","push","render","x","id","place_name","s","i"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\nimport { throttle, debounce } from \"throttle-debounce\";\n\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw'\n\nfunction constructSearchUrl(searchTerm){\n\tlet params = {\n\t\tbbox: '-76,39,-75,41',\n\t\taccess_token: ACCESS_TOKEN\n\t}\n\tlet esc = encodeURIComponent;\n\tlet url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n\turl += `${esc(searchTerm)}.json`;\n\tlet query = Object.keys(params)\n\t\t.map(k => esc(k) + '=' + esc(params[k]))\n\t\t.join('&');\n\turl += '?'\n\turl += query;\n\n\treturn url\n}\n\nfunction PlaceName(info){\n\tconsole.log(info)\n\treturn info\n\tconst [name, address] = info.split(',').slice(0,2);\n\treturn <fragment><em>{name}</em>{address}</fragment>\n}\n\nclass AutoComplete extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n    \t q: \"\", \n    \t features: [],\n\t};\n    this.autocompleteSearchDebounced = debounce(1000, this.autocompleteSearch);\n    this.autocompleteSearchThrottled = throttle(2000, this.autocompleteSearch);\n  }\n\n  changeQuery = event => {\n    this.setState({ q: event.target.value }, () => {\n      const q = this.state.q;\n      if (q.length < 5) {\n        this.autocompleteSearchThrottled(this.state.q);\n      } else {\n        this.autocompleteSearchDebounced(this.state.q);\n      }\n    });\n  };\n\n  autocompleteSearch = q => {\n    this.storeSearch(q);\n    this.makeAutocompleteLookup(q);\n  };\n\n  makeAutocompleteLookup = q => {\n    // Store the latest input here scoped in the App instance.\n    this.waitingFor = q;\n    fetch(constructSearchUrl(q))\n    .then(response => {\n      if (response.status === 200) {\n        // Only bother with this XHR response\n        // if this query term matches what we're waiting for.\n        if (q === this.waitingFor) {\n          response.json()\n          .then(results => {\n              this.setState({features: results.features});\n          })\n        }\n      }\n    })\n  }\n\n\n\n  storeSearch = q => {\n    const _searches = this.state._searches || [];\n    _searches.push(q);\n    this.setState({ _searches });\n  }\n\n\n  render() {\n    const _searches = this.state._searches || [];\n    const results = this.state.features.map(x => <li key={x.id}><PlaceName info={x.place_name}/></li>);\n    return (\n      <div>\n      \t<ul>{results}</ul>\n        <input\n          placeholder=\"Type something here\"\n          type=\"text\"\n          value={this.state.q}\n          onChange={this.changeQuery}\n        />\n        <hr />\n        {_searches.length ? (\n          <button\n            type=\"button\"\n            onClick={event => this.setState({ _searches: [] })}\n          >\n            Reset\n          </button>\n        ) : null}\n        <ol>\n          {_searches.map((s, i) => {\n            return <li key={s + i}>{s}</li>;\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}