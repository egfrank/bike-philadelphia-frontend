{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/MarkerList.js\";\nimport React from 'react';\nimport Marker from '../components/Marker';\nimport { EXPLORE_PANEL, SEARCH_PANEL } from '../actions';\n\nconst MarkerList = props => {\n  let markerList = props.panel === SEARCH_PANEL ? React.createElement(SearchMarkers, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  })) : React.createElement(ExploreMarkers, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, markerList);\n};\n\nconst ExploreMarkers = ({\n  markerArray,\n  selectedMarkers,\n  onMarkerClick\n}) => {\n  return markerArray.map(m => React.createElement(Marker, Object.assign({}, m, {\n    key: m.id,\n    onClick: () => onMarkerClick(m.id, selectedMarkers.includes(m.id)),\n    active: selectedMarkers.includes(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};\n\nconst SearchMarkers = ({\n  markerArray,\n  distanceArray,\n  latestCoordinateLookup\n}) => {\n  let activeMarkerIDs = distanceArray.map(x => +x[0]);\n  let markerList = markerArray.map(m => React.createElement(Marker, Object.assign({}, m, {\n    key: m.id,\n    active: activeMarkerIDs.includes(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n  let searchedMarker = React.createElement(Marker, {\n    key: \"searchedMarker\",\n    active: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default MarkerList;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/MarkerList.js"],"names":["React","Marker","EXPLORE_PANEL","SEARCH_PANEL","MarkerList","props","markerList","panel","ExploreMarkers","markerArray","selectedMarkers","onMarkerClick","map","m","id","includes","SearchMarkers","distanceArray","latestCoordinateLookup","activeMarkerIDs","x","searchedMarker"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,MAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,KAAgBJ,YAAhB,GAA+B,oBAAC,aAAD,oBAAmBE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B,GAA8D,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/E;AACA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,UAAN,CAAR;AACA,CAHD;;AAOA,MAAME,cAAc,GAAI,CAAE;AAACC,EAAAA,WAAD;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA;AAA/B,CAAF,KAAqD;AAC5E,SACCF,WAAW,CAACG,GAAZ,CAAiBC,CAAC,IAAI,oBAAC,MAAD,oBAAYA,CAAZ;AACd,IAAA,GAAG,EAAEA,CAAC,CAACC,EADO;AAEd,IAAA,OAAO,EAAE,MAAMH,aAAa,CAACE,CAAC,CAACC,EAAH,EAAOJ,eAAe,CAACK,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAAP,CAFd;AAGd,IAAA,MAAM,EAAEJ,eAAe,CAACK,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB,CADD;AAMA,CAPD;;AASA,MAAME,aAAa,GAAG,CAAE;AAACP,EAAAA,WAAD;AAAcQ,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAF,KAA4D;AAEjF,MAAIC,eAAe,GAAGF,aAAa,CAACL,GAAd,CAAkBQ,CAAC,IAAI,CAACA,CAAC,CAAC,CAAD,CAAzB,CAAtB;AACA,MAAId,UAAU,GAAGG,WAAW,CAACG,GAAZ,CAAgBC,CAAC,IAAI,oBAAC,MAAD,oBAAYA,CAAZ;AAC7B,IAAA,GAAG,EAAEA,CAAC,CAACC,EADsB;AAE7B,IAAA,MAAM,EAAEK,eAAe,CAACJ,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB,CAAjB;AAGA,MAAIO,cAAc,GAAG,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,gBAAZ;AACb,IAAA,MAAM,EAAC,OADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAIA,CAVD;;AAYA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport Marker from '../components/Marker'\nimport { EXPLORE_PANEL, SEARCH_PANEL } from '../actions'\n\n\nconst MarkerList = (props) => {\n\tlet markerList = props.panel === SEARCH_PANEL ? <SearchMarkers {...props} /> : <ExploreMarkers {...props} />\n\treturn (<div>{markerList}</div>)\n}\n\n\n\nconst ExploreMarkers  = ( {markerArray, selectedMarkers, onMarkerClick} ) => {\n\treturn (\n\t\tmarkerArray.map( m => <Marker {...m} \n\t\t\t\t\t\t\t\t\t\tkey={m.id} \n\t\t\t\t\t\t\t\t\t\tonClick={() => onMarkerClick(m.id, selectedMarkers.includes(m.id))}\n\t\t\t\t\t\t\t\t\t\tactive={selectedMarkers.includes(m.id)}/>)\n\t)\n}\n\nconst SearchMarkers = ( {markerArray, distanceArray, latestCoordinateLookup} ) => {\n\n\tlet activeMarkerIDs = distanceArray.map(x => +x[0])\n\tlet markerList = markerArray.map(m => <Marker {...m} \n\t\t\t\t\t\t\t\t\t\tkey={m.id} \n\t\t\t\t\t\t\t\t\t\tactive={activeMarkerIDs.includes(m.id)}/>)\n\tlet searchedMarker = <Marker key='searchedMarker'\n\t\t\t\t\t\t\t\t active='false'\n\t\t\t\t\t\t />\n\n}\n\nexport default MarkerList"]},"metadata":{},"sourceType":"module"}