{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nconst BaseWeather = ({\n  temp,\n  imgUrl\n}) => React.createElement(\"div\", {\n  style: {\n    borderRadius: 20,\n    background: 'grey',\n    display: 'flex',\n    justifyContent: 'space-between',\n    border: '1px solid grey',\n    width: 100\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \" \", temp, \" \"), React.createElement(\"img\", {\n  src: imgUrl,\n  style: {\n    background: 'white'\n  },\n  alt: \"weather icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nconst mapStateToProps = state => {\n  let weather = state.api.weather;\n\n  if (weather.hasOwnProperty('main')) {\n    return {\n      temp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n      imgUrl: createIconImgUrl(state.api.weather.weather[0].icon)\n    };\n  } else {\n    return {\n      temp: undefined,\n      imgUrl: undefined\n    };\n  }\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\nexport default Weather;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/Weather.js"],"names":["connect","React","BaseWeather","temp","imgUrl","borderRadius","background","display","justifyContent","border","width","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","mapStateToProps","state","weather","api","hasOwnProperty","main","undefined","Weather"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACnB;AAAK,EAAA,KAAK,EAAE;AAACC,IAAAA,YAAY,EAAE,EAAf;AAAmBC,IAAAA,UAAU,EAAE,MAA/B;AAAuCC,IAAAA,OAAO,EAAE,MAAhD;AAAwDC,IAAAA,cAAc,EAAE,eAAxE;AAAyFC,IAAAA,MAAM,EAAE,gBAAjG;AAAmHC,IAAAA,KAAK,EAAE;AAA1H,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAOP,IAAP,MADD,EAEC;AAAK,EAAA,GAAG,EAAEC,MAAV;AAAkB,EAAA,KAAK,EAAE;AAACE,IAAAA,UAAU,EAAE;AAAb,GAAzB;AAAgD,EAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,CADD;;AAQA,SAASK,gBAAT,CAA0BC,IAA1B,EAA+B;AAC7B,mDAA0CA,IAA1C;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,SAAOC,IAAI,CAACC,KAAL,CAAW,IAAK,CAAL,IAAUF,MAAM,GAAG,GAAnB,IAA0B,EAArC,EAAyC,CAAzC,CAAP;AACD;;AAID,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,MAAIC,OAAO,GAAGD,KAAK,CAACE,GAAN,CAAUD,OAAxB;;AACA,MAAMA,OAAO,CAACE,cAAR,CAAuB,MAAvB,CAAN,EAAsC;AACrC,WAAO;AACNlB,MAAAA,IAAI,EAAEU,WAAW,CAACK,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBG,IAAlB,CAAuBnB,IAAxB,CAAX,GAA2C,MAD3C;AAENC,MAAAA,MAAM,EAAEO,gBAAgB,CAACO,KAAK,CAACE,GAAN,CAAUD,OAAV,CAAkBA,OAAlB,CAA0B,CAA1B,EAA6BP,IAA9B;AAFlB,KAAP;AAIA,GALD,MAKO;AACN,WAAO;AACNT,MAAAA,IAAI,EAAEoB,SADA;AAENnB,MAAAA,MAAM,EAAEmB;AAFF,KAAP;AAIA;AACD,CAbD;;AAeA,MAAMC,OAAO,GAAGxB,OAAO,CAACiB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bf,WAA/B,CAAhB;AAEA,eAAesB,OAAf","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\n\n\nconst BaseWeather = ({ temp, imgUrl }) => (\n\t<div style={{borderRadius: 20, background: 'grey', display: 'flex', justifyContent: 'space-between', border: '1px solid grey', width: 100 }}>\n\t\t<h3 > {temp} </h3>\n\t\t<img src={imgUrl} style={{background: 'white'}} alt=\"weather icon\"></img>\n\t</div>\n)\n\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nconst mapStateToProps = state => {\n\tlet weather = state.api.weather;\n\tif  ( weather.hasOwnProperty('main') ){\n\t\treturn {  \n\t\t\ttemp: convertKtoF(state.api.weather.main.temp) + '\\xB0',\n\t\t\timgUrl: createIconImgUrl(state.api.weather.weather[0].icon),\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\ttemp: undefined,\n\t\t\timgUrl: undefined\n\t\t}\n\t}\n};\n\nconst Weather = connect(mapStateToProps, null)(BaseWeather);\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}