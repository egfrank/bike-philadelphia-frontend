{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/MarkerList.js\";\nimport React from 'react';\nimport Marker from '../components/Marker';\nimport { EXPLORE_PANEL, SEARCH_PANEL } from '../actions';\nimport L from 'leaflet';\nimport { Marker as LeafletMarker } from 'react-leaflet';\nconst greyIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst MarkerList = props => {\n  let markerList = props.panel === SEARCH_PANEL ? React.createElement(SearchMarkers, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })) : React.createElement(ExploreMarkers, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, markerList);\n};\n\nconst ExploreMarkers = ({\n  markerArray,\n  selectedMarkers,\n  onMarkerClick\n}) => {\n  return markerArray.map(m => React.createElement(Marker, Object.assign({}, m, {\n    key: m.id,\n    onClick: () => onMarkerClick(m.id, selectedMarkers.includes(m.id)),\n    active: selectedMarkers.includes(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nconst SearchMarkers = ({\n  markerArray,\n  distanceArray,\n  latestCoordinateLookup\n}) => {\n  let activeMarkerIDs = distanceArray.map(x => +x[0]);\n  let markerList = markerArray.map(m => React.createElement(Marker, Object.assign({}, m, {\n    key: m.id,\n    active: activeMarkerIDs.includes(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n  let searchedMarker = latestCoordinateLookup.length > 0 ? React.createElement(LeafletMarker, {\n    key: \"searched\",\n    position: [latestCoordinateLookup[1], latestCoordinateLookup[0]],\n    icon: greyIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : null;\n  console.log([searchedMarker, ...markerList]);\n  return [searchedMarker, ...markerList];\n};\n\nexport default MarkerList;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/MarkerList.js"],"names":["React","Marker","EXPLORE_PANEL","SEARCH_PANEL","L","LeafletMarker","greyIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","MarkerList","props","markerList","panel","ExploreMarkers","markerArray","selectedMarkers","onMarkerClick","map","m","id","includes","SearchMarkers","distanceArray","latestCoordinateLookup","activeMarkerIDs","x","searchedMarker","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASH,MAAM,IAAII,aAAnB,QAAuC,eAAvC;AAMA,MAAMC,QAAQ,GAAG,IAAIF,CAAC,CAACG,IAAN,CAAW;AAC1BC,EAAAA,OAAO,EAAE,sFADiB;AAE1BC,EAAAA,SAAS,EAAE,+EAFe;AAG1BC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHgB;AAI1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJc;AAK1BC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALa;AAM1BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANc,CAAX,CAAjB;;AAUA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,MAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,KAAgBd,YAAhB,GAA+B,oBAAC,aAAD,oBAAmBY,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B,GAA8D,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/E;AACA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,UAAN,CAAR;AACA,CAHD;;AAOA,MAAME,cAAc,GAAI,CAAE;AAACC,EAAAA,WAAD;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA;AAA/B,CAAF,KAAqD;AAC5E,SACCF,WAAW,CAACG,GAAZ,CAAiBC,CAAC,IAAI,oBAAC,MAAD,oBAAYA,CAAZ;AACd,IAAA,GAAG,EAAEA,CAAC,CAACC,EADO;AAEd,IAAA,OAAO,EAAE,MAAMH,aAAa,CAACE,CAAC,CAACC,EAAH,EAAOJ,eAAe,CAACK,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAAP,CAFd;AAGd,IAAA,MAAM,EAAEJ,eAAe,CAACK,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB,CADD;AAMA,CAPD;;AASA,MAAME,aAAa,GAAG,CAAE;AAACP,EAAAA,WAAD;AAAcQ,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAF,KAA4D;AAEjF,MAAIC,eAAe,GAAGF,aAAa,CAACL,GAAd,CAAkBQ,CAAC,IAAI,CAACA,CAAC,CAAC,CAAD,CAAzB,CAAtB;AACA,MAAId,UAAU,GAAGG,WAAW,CAACG,GAAZ,CAAgBC,CAAC,IAAI,oBAAC,MAAD,oBAAYA,CAAZ;AAC7B,IAAA,GAAG,EAAEA,CAAC,CAACC,EADsB;AAE7B,IAAA,MAAM,EAAEK,eAAe,CAACJ,QAAhB,CAAyBF,CAAC,CAACC,EAA3B,CAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB,CAAjB;AAGA,MAAIO,cAAc,GAAGH,sBAAsB,CAACI,MAAvB,GAA+B,CAA/B,GAAmC,oBAAC,aAAD;AAClD,IAAA,GAAG,EAAC,UAD8C;AAElD,IAAA,QAAQ,EAAE,CAACJ,sBAAsB,CAAC,CAAD,CAAvB,EAA4BA,sBAAsB,CAAC,CAAD,CAAlD,CAFwC;AAGlD,IAAA,IAAI,EAAGtB,QAH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAKd,IALP;AAMA2B,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,cAAD,EAAiB,GAAGf,UAApB,CAAZ;AACA,SAAO,CAACe,cAAD,EAAiB,GAAGf,UAApB,CAAP;AACA,CAdD;;AAgBA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport Marker from '../components/Marker'\nimport { EXPLORE_PANEL, SEARCH_PANEL } from '../actions'\nimport L from 'leaflet';\nimport { Marker as LeafletMarker} from 'react-leaflet'\n\n\n\n\n\nconst greyIcon = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n\nconst MarkerList = (props) => {\n\tlet markerList = props.panel === SEARCH_PANEL ? <SearchMarkers {...props} /> : <ExploreMarkers {...props} />\n\treturn (<div>{markerList}</div>)\n}\n\n\n\nconst ExploreMarkers  = ( {markerArray, selectedMarkers, onMarkerClick} ) => {\n\treturn (\n\t\tmarkerArray.map( m => <Marker {...m} \n\t\t\t\t\t\t\t\t\t\tkey={m.id} \n\t\t\t\t\t\t\t\t\t\tonClick={() => onMarkerClick(m.id, selectedMarkers.includes(m.id))}\n\t\t\t\t\t\t\t\t\t\tactive={selectedMarkers.includes(m.id)}/>)\n\t)\n}\n\nconst SearchMarkers = ( {markerArray, distanceArray, latestCoordinateLookup} ) => {\n\n\tlet activeMarkerIDs = distanceArray.map(x => +x[0])\n\tlet markerList = markerArray.map(m => <Marker {...m} \n\t\t\t\t\t\t\t\t\t\tkey={m.id} \n\t\t\t\t\t\t\t\t\t\tactive={activeMarkerIDs.includes(m.id)}/>)\n\tlet searchedMarker = latestCoordinateLookup.length >0 ? <LeafletMarker \n\t\t\t\t\t\t\tkey='searched'\n\t\t\t\t\t\t\tposition={[latestCoordinateLookup[1], latestCoordinateLookup[0]]}\n\t\t\t\t\t\t\ticon= {greyIcon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: null;\n\tconsole.log([searchedMarker, ...markerList])\n\treturn [searchedMarker, ...markerList]\n}\n\nexport default MarkerList"]},"metadata":{},"sourceType":"module"}