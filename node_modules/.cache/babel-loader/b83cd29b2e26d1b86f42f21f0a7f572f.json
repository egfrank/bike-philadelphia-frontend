{"ast":null,"code":"import _slicedToArray from \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'; // CONSTANTS\n\nimport axios from 'axios';\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nfunction subsetInfo(stationInfo) {\n  const reducedStationInfo = {\n    coordinates: [stationInfo.geometry.coordinates[1], stationInfo.geometry.coordinates[0]],\n    id: stationInfo.properties.kioskId,\n    name: stationInfo.properties.name,\n    addressStreet: stationInfo.properties.addressStreet,\n    bikesAvailable: stationInfo.properties.bikesAvailable,\n    totalDocks: stationInfo.properties.totalDocks\n  };\n  return reducedStationInfo;\n}\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stations: {},\n      weather: {},\n      selectedStations: []\n    };\n    this.handleClickOnMarker = this.handleClickOnMarker.bind(this);\n    this.handleClickOnStationInfo = this.handleClickOnStationInfo.bind(this);\n  }\n\n  handleClickOnStationInfo(event) {\n    console.log(JSON.stringify(event.target));\n  }\n\n  componentDidMount() {\n    axios.get(ENDPOINT).then(response => response.data).then(results => {\n      let stations = {};\n\n      for (const _ref of Object.entries(results.stations)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        const stationID = _ref2[0];\n        const stationInformation = _ref2[1];\n        stations[stationID] = subsetInfo(stationInformation);\n      }\n\n      const weather = {\n        temperature: convertKtoF(results.weather.main.temp) + '\\xB0',\n        iconUrl: createIconImgUrl(results.weather.weather[0].icon),\n        weather: results.weather.weather[0].main\n      };\n      this.setState({\n        stations,\n        weather\n      });\n    });\n  }\n\n  handleClickOnMarker() {\n    this.setState({});\n  }\n\n  handleClickOnStationInfo() {\n    this.setState({});\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(StationsContainer, {\n      stations: this.state.stations,\n      selectedStations: this.state.selectedStations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Weather(props) {\n  return React.createElement(\"div\", {\n    className: \"weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.weather.temperature), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.weather.iconUrl,\n    alt: \"weather icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.weather.weather));\n}\n\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n  height: 300,\n  width: 400\n};\nconst accessToken = \"pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw\";\nconst id = 'mapbox.streets';\nconst mapboxURL = \"https://api.tiles.mapbox.com/v4/\".concat(id, \"/{z}/{x}/{y}.png?access_token=\").concat(accessToken);\n\nfunction MarkersList(props) {\n  let markersArray = Object.values(props.stations).map(s => React.createElement(StationMarker, {\n    key: \"marker-\".concat(s.id),\n    station: s,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }));\n  return markersArray;\n}\n\nfunction StationMarker(props) {\n  return React.createElement(Marker, {\n    position: props.station.coordinates,\n    id: props.station.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \" \", React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, props.station.name)));\n}\n\nclass StationsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Map, {\n      center: position,\n      zoom: zoom,\n      style: mapStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: mapboxURL,\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(MarkersList, {\n      stations: this.props.stations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Stations\"), React.createElement(StationsList, {\n      stations: this.props.stations,\n      selectedStations: this.props.selectedStations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction StationsList(props) {\n  let stationsList = Object.values(props.stations).map(s => React.createElement(Station, {\n    key: s.id,\n    station: s,\n    selectedStations: props.selectedStations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n  return stationsList;\n}\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickOnStationInfo = this.clickOnStationInfo.bind(this);\n  }\n\n  clickOnStationInfo(event) {\n    this.props.handleClickOnStationInfo(event);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.clickOnStationInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.props.station.name), this.props.selectedStations.includes(this.props.station.id) && React.createElement(\"div\", {\n      className: \"extended-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.props.station.addressStreet, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.props.station.bikesAvailable, \" / \", this.props.station.totalDocks)));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js"],"names":["React","Map","Marker","Popup","TileLayer","axios","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","ENDPOINT","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","subsetInfo","stationInfo","reducedStationInfo","coordinates","geometry","id","properties","kioskId","name","addressStreet","bikesAvailable","totalDocks","AppContainer","Component","constructor","props","state","stations","weather","selectedStations","handleClickOnMarker","bind","handleClickOnStationInfo","event","console","log","JSON","stringify","target","componentDidMount","get","then","response","data","results","Object","entries","stationID","stationInformation","temperature","main","temp","setState","render","Weather","position","zoom","mapStyle","height","width","accessToken","mapboxURL","MarkersList","markersArray","values","map","s","StationMarker","station","StationsContainer","StationsList","stationsList","Station","clickOnStationInfo","includes","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\n// CONSTANTS\nimport axios from 'axios';\n\n\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\nfunction subsetInfo(stationInfo){\n  const reducedStationInfo= {\n    coordinates:  [stationInfo.geometry.coordinates[1], stationInfo.geometry.coordinates[0]],\n    id: stationInfo.properties.kioskId,\n    name: stationInfo.properties.name,\n    addressStreet: stationInfo.properties.addressStreet,\n    bikesAvailable:stationInfo.properties.bikesAvailable,\n    totalDocks:stationInfo.properties.totalDocks,\n  }\n  return reducedStationInfo\n}\n\nclass AppContainer extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      stations: {},\n      weather: {},\n      selectedStations: [],\n    };\n    this.handleClickOnMarker = this.handleClickOnMarker.bind(this)\n    this.handleClickOnStationInfo = this.handleClickOnStationInfo.bind(this)\n  }\n\n  handleClickOnStationInfo(event){\n    console.log(JSON.stringify(event.target));\n  }\n\n\n  componentDidMount(){\n    axios.get(ENDPOINT)\n        .then(response => response.data)\n        .then(results => {\n          let stations = {};\n          for (const [stationID, stationInformation] of Object.entries(results.stations)){\n            stations[stationID] = subsetInfo(stationInformation);\n          }\n          const weather = {\n              temperature: convertKtoF(results.weather.main.temp) + '\\xB0',\n              iconUrl: createIconImgUrl(results.weather.weather[0].icon),\n              weather: results.weather.weather[0].main,};\n          this.setState({stations, weather});\n        })\n  }\n\n  handleClickOnMarker(){\n    this.setState({\n      \n\n    });\n  }\n\n  handleClickOnStationInfo(){\n    this.setState({\n\n    });\n\n  }\n\n\n\n  render(){\n    return (\n      <div>\n      \n    <Weather weather={this.state.weather}/>\n    <StationsContainer stations={this.state.stations} selectedStations={this.state.selectedStations}/>\n    </div>\n    )}\n}\n\n\nfunction Weather(props){\n  return (\n      <div className=\"weather\">\n          <span>{props.weather.temperature}</span>\n          <span><img src={props.weather.iconUrl} alt=\"weather icon\"></img></span>\n          <span>{props.weather.weather}</span>\n      </div>\n  )}\n\n\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n    height: 300,\n    width: 400,\n}\n\nconst accessToken = `pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw`\nconst id = 'mapbox.streets';\nconst mapboxURL = `https://api.tiles.mapbox.com/v4/${id}/{z}/{x}/{y}.png?access_token=${accessToken}`\n\nfunction MarkersList(props){\n\n  let markersArray = Object.values(props.stations)\n                        .map(s => <StationMarker key={`marker-${s.id}`} station={s} />);\n  return markersArray;\n}\n\n\n\nfunction StationMarker(props){\n  return (\n    <Marker position={props.station.coordinates} id={props.station.id}>\n      <Popup> <h1>{props.station.name}</h1></Popup>\n    </Marker>\n    )\n\n}\n\nclass StationsContainer extends React.Component{\n\n  constructor(props){\n      super(props);\n  }\n\n  render(){\n    return (\n      <div>\n          <Map center={position} zoom={zoom} style={mapStyle}>\n          <TileLayer\n              url={mapboxURL}\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"/>\n          <MarkersList stations={this.props.stations}/>\n          </Map>\n          <h2>Stations</h2>\n          <StationsList stations={this.props.stations} selectedStations={this.props.selectedStations} />\n          \n      </div>\n  )}\n}\n\n\nfunction StationsList(props){\n  let stationsList = Object.values(props.stations)\n                        .map(s => <Station key={s.id} station={s} selectedStations={props.selectedStations}/>);\n  return stationsList;\n}  \n\nclass Station extends React.Component{\n  constructor(props){\n    super(props);\n    this.clickOnStationInfo = this.clickOnStationInfo.bind(this)\n  }\n\n  clickOnStationInfo(event){\n    this.props.handleClickOnStationInfo(event);\n  }\n\n  render(){\n  return (\n\n    <div>\n      <h1 onClick={this.clickOnStationInfo}>{this.props.station.name}</h1>\n    {this.props.selectedStations.includes(this.props.station.id) && <div className=\"extended-info\">\n            {this.props.station.addressStreet}<div/>\n            <h3>{this.props.station.bikesAvailable} / {this.props.station.totalDocks}</h3>\n          </div>}\n    </div>\n    )}\n}\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}