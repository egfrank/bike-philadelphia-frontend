{"ast":null,"code":"import _slicedToArray from \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'; // CONSTANTS\n\nimport axios from 'axios';\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nfunction subsetInfo(stationInfo) {\n  const reducedStationInfo = {\n    coordinates: [stationInfo.geometry.coordinates[1], stationInfo.geometry.coordinates[0]],\n    id: stationInfo.properties.kioskId,\n    name: stationInfo.properties.name,\n    addressStreet: stationInfo.properties.addressStreet,\n    bikesAvailable: stationInfo.properties.bikesAvailable,\n    totalDocks: stationInfo.properties.totalDocks\n  };\n  return reducedStationInfo;\n}\n\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n  height: 300,\n  width: 400,\n  float: left\n};\nconst listStyle = {};\nconst accessToken = \"pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw\";\nconst id = 'mapbox.streets';\nconst mapboxURL = \"https://api.tiles.mapbox.com/v4/\".concat(id, \"/{z}/{x}/{y}.png?access_token=\").concat(accessToken);\n\nfunction Weather(props) {\n  return React.createElement(\"div\", {\n    className: \"weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.weather.temperature), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.weather.iconUrl,\n    alt: \"weather icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.weather.weather));\n}\n\nfunction MarkersList(props) {\n  let markersArray = Object.values(props.stations).map(s => React.createElement(StationMarker, {\n    key: \"marker-\".concat(s.id),\n    station: s,\n    selectedStations: props.selectedStations,\n    handleClickOnMarker: props.handleClickOnMarker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n  return markersArray;\n}\n\nclass StationMarker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickMarker = this.onClickMarker.bind(this);\n  }\n\n  onClickMarker(event) {\n    this.props.handleClickOnMarker(this.props.station.id);\n  }\n\n  render() {\n    if (this.props.selectedStations.includes(this.props.station.id)) {\n      return React.createElement(Marker, {\n        position: this.props.station.coordinates,\n        id: this.props.station.id,\n        onClick: this.onClickMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" \", React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.station.name)));\n    } else {\n      return React.createElement(Marker, {\n        position: this.props.station.coordinates,\n        id: this.props.station.id,\n        onClick: this.onClickMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stations: {},\n      weather: {},\n      selectedStations: []\n    };\n    this.handleClickOnMarker = this.handleClickOnMarker.bind(this);\n    this.handleClickOnStationInfo = this.handleClickOnStationInfo.bind(this);\n  }\n\n  handleClickOnStationInfo(stationID) {\n    let selectedStations = this.state.selectedStations;\n\n    if (!selectedStations.includes(stationID)) {\n      selectedStations.push(stationID);\n    }\n\n    ;\n    this.setState({\n      selectedStations\n    });\n  }\n\n  handleClickOnMarker(stationID) {\n    let selectedStations = this.state.selectedStations;\n\n    if (selectedStations.includes(stationID)) {\n      let index = selectedStations.indexOf(stationID);\n\n      if (index > -1) {\n        selectedStations.splice(index, 1);\n      }\n    } else {\n      selectedStations.push(stationID);\n    }\n\n    ;\n    this.setState({\n      selectedStations\n    });\n  }\n\n  componentDidMount() {\n    axios.get(ENDPOINT).then(response => response.data).then(results => {\n      let stations = {};\n\n      for (const _ref of Object.entries(results.stations)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        const stationID = _ref2[0];\n        const stationInformation = _ref2[1];\n        stations[stationID] = subsetInfo(stationInformation);\n      }\n\n      const weather = {\n        temperature: convertKtoF(results.weather.main.temp) + '\\xB0',\n        iconUrl: createIconImgUrl(results.weather.weather[0].icon),\n        weather: results.weather.weather[0].main\n      };\n      this.setState({\n        stations,\n        weather\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(StationsContainer, {\n      stations: this.state.stations,\n      selectedStations: this.state.selectedStations,\n      handleClickOnMarker: this.handleClickOnMarker,\n      handleClickOnStationInfo: this.handleClickOnStationInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass StationsContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Map, {\n      center: position,\n      zoom: zoom,\n      style: mapStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: mapboxURL,\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(MarkersList, {\n      stations: this.props.stations,\n      handleClickOnMarker: this.props.handleClickOnMarker,\n      selectedStations: this.props.selectedStations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Stations\"), React.createElement(StationsList, {\n      stations: this.props.stations,\n      handleClickOnStationInfo: this.props.handleClickOnStationInfo,\n      selectedStations: this.props.selectedStations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction StationsList(props) {\n  let stationsList = Object.values(props.stations).map(s => React.createElement(Station, {\n    key: s.id,\n    handleClickOnStationInfo: props.handleClickOnStationInfo,\n    station: s,\n    selectedStations: props.selectedStations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n  return stationsList;\n}\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickOnStationInfo = this.clickOnStationInfo.bind(this);\n  }\n\n  clickOnStationInfo(event) {\n    this.props.handleClickOnStationInfo(this.props.station.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.clickOnStationInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.props.station.name), this.props.selectedStations.includes(this.props.station.id) && React.createElement(\"div\", {\n      className: \"extended-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.props.station.addressStreet, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.props.station.bikesAvailable, \" / \", this.props.station.totalDocks)));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js"],"names":["React","Map","Marker","Popup","TileLayer","axios","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","ENDPOINT","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","subsetInfo","stationInfo","reducedStationInfo","coordinates","geometry","id","properties","kioskId","name","addressStreet","bikesAvailable","totalDocks","position","zoom","mapStyle","height","width","float","left","listStyle","accessToken","mapboxURL","Weather","props","weather","temperature","MarkersList","markersArray","Object","values","stations","map","s","selectedStations","handleClickOnMarker","StationMarker","Component","constructor","onClickMarker","bind","event","station","render","includes","AppContainer","state","handleClickOnStationInfo","stationID","push","setState","index","indexOf","splice","componentDidMount","get","then","response","data","results","entries","stationInformation","main","temp","StationsContainer","StationsList","stationsList","Station","clickOnStationInfo","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\n\n// CONSTANTS\nimport axios from 'axios';\n\n\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst ENDPOINT = 'http://localhost:8000';\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\nfunction subsetInfo(stationInfo){\n  const reducedStationInfo= {\n    coordinates:  [stationInfo.geometry.coordinates[1], stationInfo.geometry.coordinates[0]],\n    id: stationInfo.properties.kioskId,\n    name: stationInfo.properties.name,\n    addressStreet: stationInfo.properties.addressStreet,\n    bikesAvailable:stationInfo.properties.bikesAvailable,\n    totalDocks:stationInfo.properties.totalDocks,\n  }\n  return reducedStationInfo\n}\nconst position = [39.95378, -75.16374];\nconst zoom = 13;\nconst mapStyle = {\n    height: 300,\n    width: 400,\n    float: left,\n}\n\nconst listStyle = {\n    \n\n\n}\nconst accessToken = `pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw`\nconst id = 'mapbox.streets';\nconst mapboxURL = `https://api.tiles.mapbox.com/v4/${id}/{z}/{x}/{y}.png?access_token=${accessToken}`\n\nfunction Weather(props){\n  return (\n      <div className=\"weather\">\n          <span>{props.weather.temperature}</span>\n          <span><img src={props.weather.iconUrl} alt=\"weather icon\"></img></span>\n          <span>{props.weather.weather}</span>\n      </div>\n  )}\n\nfunction MarkersList(props){\n  let markersArray = Object.values(props.stations)\n                        .map(s => <StationMarker key={`marker-${s.id}`} station={s} selectedStations={props.selectedStations} handleClickOnMarker={props.handleClickOnMarker}/>);\n  return markersArray;\n}\n\n\n\nclass StationMarker extends React.Component{\n  constructor(props){\n    super(props);\n    this.onClickMarker = this.onClickMarker.bind(this);\n  }\n\n  onClickMarker(event){\n    this.props.handleClickOnMarker(this.props.station.id);\n  }\n\n\n  render() {\n    if ( this.props.selectedStations.includes(this.props.station.id) ) {\n\n\n    return (\n      <Marker position={this.props.station.coordinates} id={this.props.station.id} onClick={this.onClickMarker}>\n        <Popup> <h1>{this.props.station.name}</h1></Popup>\n      </Marker>\n\n\n      )} else {\n      return  <Marker position={this.props.station.coordinates} id={this.props.station.id} onClick={this.onClickMarker}/>\n    }\n  }\n}\n\nclass AppContainer extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      stations: {},\n      weather: {},\n      selectedStations: [],\n    };\n    this.handleClickOnMarker = this.handleClickOnMarker.bind(this)\n    this.handleClickOnStationInfo = this.handleClickOnStationInfo.bind(this)\n  }\n\n  handleClickOnStationInfo(stationID){\n    let selectedStations = this.state.selectedStations;\n\n    if ( !selectedStations.includes(stationID) ){\n      selectedStations.push(stationID);\n    };\n\n    this.setState({selectedStations});\n\n  }\n\n  handleClickOnMarker(stationID){\n\n    let selectedStations = this.state.selectedStations;\n\n    if ( selectedStations.includes(stationID) ){\n      let index = selectedStations.indexOf(stationID);\n        if (index > -1) {\n          selectedStations.splice(index, 1);\n        }\n    } else {\n      selectedStations.push(stationID);\n    };\n\n    this.setState({selectedStations});\n  }\n\n\n  componentDidMount(){\n    axios.get(ENDPOINT)\n        .then(response => response.data)\n        .then(results => {\n          let stations = {};\n          for (const [stationID, stationInformation] of Object.entries(results.stations)){\n            stations[stationID] = subsetInfo(stationInformation);\n          }\n          const weather = {\n              temperature: convertKtoF(results.weather.main.temp) + '\\xB0',\n              iconUrl: createIconImgUrl(results.weather.weather[0].icon),\n              weather: results.weather.weather[0].main,};\n          this.setState({stations, weather});\n        })\n  }\n\n  \n\n\n  render(){\n    return (\n      <div>\n      \n    <Weather weather={this.state.weather}  />\n    <StationsContainer stations={this.state.stations} selectedStations={this.state.selectedStations} \n        handleClickOnMarker={this.handleClickOnMarker} handleClickOnStationInfo={this.handleClickOnStationInfo}/>\n    </div>\n    )}\n}\n\n\n\n\n\nclass StationsContainer extends React.Component{\n\n  render(){\n    return (\n      <div>\n          <Map center={position} zoom={zoom} style={mapStyle}>\n          <TileLayer\n              url={mapboxURL}\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"/>\n          <MarkersList stations={this.props.stations} handleClickOnMarker={this.props.handleClickOnMarker} selectedStations={this.props.selectedStations}/>\n          </Map>\n          <h2>Stations</h2>\n          <StationsList stations={this.props.stations} handleClickOnStationInfo={this.props.handleClickOnStationInfo} selectedStations={this.props.selectedStations} />\n          \n      </div>\n  )}\n}\n\n\nfunction StationsList(props){\n  let stationsList = Object.values(props.stations)\n                        .map(s => <Station key={s.id} handleClickOnStationInfo={props.handleClickOnStationInfo} station={s} selectedStations={props.selectedStations}/>);\n  return stationsList;\n}  \n\nclass Station extends React.Component{\n  constructor(props){\n    super(props);\n    this.clickOnStationInfo = this.clickOnStationInfo.bind(this)\n  }\n\n  clickOnStationInfo(event){\n    this.props.handleClickOnStationInfo(this.props.station.id);\n  }\n\n  render(){\n    return (\n      <div>\n        <h1 onClick={this.clickOnStationInfo}>{this.props.station.name}</h1>\n        {this.props.selectedStations.includes(this.props.station.id) && \n        <div className=\"extended-info\">\n              {this.props.station.addressStreet}<div/>\n              <h3>{this.props.station.bikesAvailable} / {this.props.station.totalDocks}</h3>\n            </div>}\n      </div>\n      )}\n}\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}