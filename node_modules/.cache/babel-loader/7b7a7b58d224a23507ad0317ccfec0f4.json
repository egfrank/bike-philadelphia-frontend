{"ast":null,"code":"import fetch from 'cross-fetch';\nexport const CLICK_MARKER = 'CLICK_MARKER';\nexport const EXPLORE_PANEL = 'EXPLORE_PANEL';\nexport const SEARCH_PANEL = 'SEARCH_PANEL';\nexport const CLICK_PANEL = 'CLICK_PANEL'; // Action creators\n\nexport const REQUEST_API_DATA = 'REQUEST_API_DATA';\nexport const FETCH_API_DATA_SUCCESS = 'FETCH_API_DATA_SUCCESS';\nexport const FETCH_API_DATA_FAILURE = 'FETCH_API_DATA_FAILURE';\nexport const RECEIVE_API_DATA = 'RECEIVE_API_DATA'; // export const FETCH_GEODATA_REQUEST = 'FETCH_GEODATA_REQUEST'\n// export const FETCH_GEODATA_SUCCESS = 'FETCH_GEODATA_SUCCESS'\n// export const FETCH_GEODATA_FAILURE = 'FETCH_GEODATA_FAILURE'\n\nexport function clickMarker(id, isSelected) {\n  return {\n    type: CLICK_MARKER,\n    id,\n    isSelected\n  };\n}\nexport function clickPanel(panel) {\n  return {\n    type: CLICK_PANEL,\n    panel\n  };\n} //  Network Actions\n\nexport function requestAPIData() {\n  return {\n    type: FETCH_API_DATA_REQUEST\n  };\n}\nexport function receiveAPIData(json) {\n  return {\n    type: RECEIVE_API_DATA,\n    bikeTimestamp: json.data.timestamp,\n    stationsByID: json.data.stations,\n    weather: json.data.weather\n  };\n}\nexport function fetchAPIData() {\n  dispatch(requestAPIData);\n  return fetch('https://bike-philly.herokuapp.com/api/v1/stations').then(response => response.json(), error => console.log('An error occurred.', error)).then(json => dispatch(receiveAPIData(json)));\n}","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/actions.js"],"names":["fetch","CLICK_MARKER","EXPLORE_PANEL","SEARCH_PANEL","CLICK_PANEL","REQUEST_API_DATA","FETCH_API_DATA_SUCCESS","FETCH_API_DATA_FAILURE","RECEIVE_API_DATA","clickMarker","id","isSelected","type","clickPanel","panel","requestAPIData","FETCH_API_DATA_REQUEST","receiveAPIData","json","bikeTimestamp","data","timestamp","stationsByID","stations","weather","fetchAPIData","dispatch","then","response","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB,C,CACP;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,UAAzB,EAAoC;AAC1C,SAAO;AACNC,IAAAA,IAAI,EAAEX,YADA;AAENS,IAAAA,EAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA0B;AAChC,SAAO;AACNF,IAAAA,IAAI,EAAER,WADA;AAENU,IAAAA;AAFM,GAAP;AAIA,C,CAID;;AAEA,OAAO,SAASC,cAAT,GAAyB;AAC/B,SAAO;AACNH,IAAAA,IAAI,EAAEI;AADA,GAAP;AAGA;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;AACnC,SAAO;AACNN,IAAAA,IAAI,EAAEJ,gBADA;AAENW,IAAAA,aAAa,EAAED,IAAI,CAACE,IAAL,CAAUC,SAFnB;AAGNC,IAAAA,YAAY,EAAEJ,IAAI,CAACE,IAAL,CAAUG,QAHlB;AAINC,IAAAA,OAAO,EAAEN,IAAI,CAACE,IAAL,CAAUI;AAJb,GAAP;AAMA;AAED,OAAO,SAASC,YAAT,GAAuB;AAC7BC,EAAAA,QAAQ,CAACX,cAAD,CAAR;AACA,SAAOf,KAAK,CAAC,mDAAD,CAAL,CACJ2B,IADI,CAEAC,QAAQ,IAAIA,QAAQ,CAACV,IAAT,EAFZ,EAGAW,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CAHT,EAKDF,IALC,CAKIT,IAAI,IACRQ,QAAQ,CAACT,cAAc,CAACC,IAAD,CAAf,CANR,CAAP;AAQA","sourcesContent":["import fetch from 'cross-fetch'\n\nexport const CLICK_MARKER = 'CLICK_MARKER'\n\nexport const EXPLORE_PANEL = 'EXPLORE_PANEL'\n\nexport const SEARCH_PANEL = 'SEARCH_PANEL'\n\nexport const CLICK_PANEL = 'CLICK_PANEL'\n// Action creators\n\nexport const REQUEST_API_DATA = 'REQUEST_API_DATA'\nexport const FETCH_API_DATA_SUCCESS = 'FETCH_API_DATA_SUCCESS'\nexport const FETCH_API_DATA_FAILURE = 'FETCH_API_DATA_FAILURE'\n\nexport const RECEIVE_API_DATA = 'RECEIVE_API_DATA'\n\n// export const FETCH_GEODATA_REQUEST = 'FETCH_GEODATA_REQUEST'\n// export const FETCH_GEODATA_SUCCESS = 'FETCH_GEODATA_SUCCESS'\n// export const FETCH_GEODATA_FAILURE = 'FETCH_GEODATA_FAILURE'\n\nexport function clickMarker(id, isSelected){\n\treturn {\n\t\ttype: CLICK_MARKER,\n\t\tid,\n\t\tisSelected\n\t}\n}\n\nexport function clickPanel(panel){\n\treturn {\n\t\ttype: CLICK_PANEL,\n\t\tpanel\n\t}\n}\n\n\n\n//  Network Actions\n\nexport function requestAPIData(){\n\treturn {\n\t\ttype: FETCH_API_DATA_REQUEST\n\t}\n}\n\nexport function receiveAPIData(json){\n\treturn {\n\t\ttype: RECEIVE_API_DATA,\n\t\tbikeTimestamp: json.data.timestamp,\n\t\tstationsByID: json.data.stations,\n\t\tweather: json.data.weather,\n\t}\n}\n\nexport function fetchAPIData(){\n\tdispatch(requestAPIData);\n\treturn fetch('https://bike-philly.herokuapp.com/api/v1/stations')\n\t  .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json =>\n        dispatch(receiveAPIData(json)))\n\t\n}\n"]},"metadata":{},"sourceType":"module"}