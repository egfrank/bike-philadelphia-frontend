{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/AutoComplete.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { throttle, debounce } from \"throttle-debounce\";\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw';\n\nfunction constructSearchUrl(searchTerm) {\n  let params = {\n    bbox: '-76,39,-75,41',\n    access_token: ACCESS_TOKEN\n  };\n  let esc = encodeURIComponent;\n  let url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n  url += \"\".concat(esc(searchTerm), \".json\");\n  let query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n  url += '?';\n  url += query;\n  return url;\n}\n\nfunction PlaceName({\n  info\n}) {\n  const name = info.text;\n  const address = info.properties.address;\n  const coordinates = info.geometry.coordinates;\n  console.log(info);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, name), address);\n}\n\nclass AutoComplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeQuery = event => {\n      this.setState({\n        q: event.target.value\n      }, () => {\n        const q = this.state.q;\n        this.autocompleteSearchDebounced(this.state.q);\n      });\n    };\n\n    this.autocompleteSearch = q => {\n      this.storeSearch(q);\n      this.makeAutocompleteLookup(q);\n    };\n\n    this.makeAutocompleteLookup = q => {\n      // Store the latest input here scoped in the App instance.\n      this.waitingFor = q;\n      fetch(constructSearchUrl(q)).then(response => {\n        if (response.status === 200) {\n          // Only bother with this XHR response\n          // if this query term matches what we're waiting for.\n          if (q === this.waitingFor) {\n            response.json().then(results => {\n              this.setState({\n                features: results.features\n              });\n            });\n          }\n        }\n      });\n    };\n\n    this.storeSearch = q => {\n      const _searches = this.state._searches || [];\n\n      _searches.push(q);\n\n      this.setState({\n        _searches\n      });\n    };\n\n    this.state = {\n      q: \"\",\n      features: []\n    };\n    this.autocompleteSearchDebounced = debounce(500, this.autocompleteSearch);\n  }\n\n  render() {\n    const _searches = this.state._searches || [];\n\n    const results = this.state.features.map(x => React.createElement(\"div\", {\n      key: x.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(PlaceName, {\n      info: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, results, React.createElement(\"input\", {\n      placeholder: \"Type something here\",\n      type: \"text\",\n      value: this.state.q,\n      onChange: this.changeQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), _searches.length ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.setState({\n        _searches: []\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Reset\") : null, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, _searches.map((s, i) => {\n      return React.createElement(\"li\", {\n        key: s + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, s);\n    })));\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/components/AutoComplete.js"],"names":["connect","React","throttle","debounce","ACCESS_TOKEN","constructSearchUrl","searchTerm","params","bbox","access_token","esc","encodeURIComponent","url","query","Object","keys","map","k","join","PlaceName","info","name","text","address","properties","coordinates","geometry","console","log","AutoComplete","Component","constructor","props","changeQuery","event","setState","q","target","value","state","autocompleteSearchDebounced","autocompleteSearch","storeSearch","makeAutocompleteLookup","waitingFor","fetch","then","response","status","json","results","features","_searches","push","render","x","id","length","s","i"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\nimport { throttle, debounce } from \"throttle-debounce\";\n\nconst ACCESS_TOKEN = 'pk.eyJ1IjoiZWxsaW90Z2ZyYW5rIiwiYSI6ImNqd3V4aXFzZTBkMjA0YW4xNGFwNnU4cWwifQ.BsUA_68pUHaCU7v4PCKLKw'\n\nfunction constructSearchUrl(searchTerm){\n\tlet params = {\n\t\tbbox: '-76,39,-75,41',\n\t\taccess_token: ACCESS_TOKEN\n\t}\n\tlet esc = encodeURIComponent;\n\tlet url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n\turl += `${esc(searchTerm)}.json`;\n\tlet query = Object.keys(params)\n\t\t.map(k => esc(k) + '=' + esc(params[k]))\n\t\t.join('&');\n\turl += '?'\n\turl += query;\n\n\treturn url\n}\n\nfunction PlaceName({info}){\n\tconst name = info.text\n\tconst address = info.properties.address\n\tconst coordinates = info.geometry.coordinates\n\tconsole.log(info)\n\treturn (\n\t\t<div>\n\t\t  <b>{name}</b>\n\t\t  {address}\n\t\t</div>\n\t)\n}\n\nclass AutoComplete extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n    \t q: \"\", \n    \t features: [],\n\t};\n    this.autocompleteSearchDebounced = debounce(500, this.autocompleteSearch);\n  }\n\n  changeQuery = event => {\n    this.setState({ q: event.target.value }, () => {\n      const q = this.state.q;\n      this.autocompleteSearchDebounced(this.state.q);\n      \n    });\n  };\n\n  autocompleteSearch = q => {\n    this.storeSearch(q);\n    this.makeAutocompleteLookup(q);\n  };\n\n  makeAutocompleteLookup = q => {\n    // Store the latest input here scoped in the App instance.\n    this.waitingFor = q;\n    fetch(constructSearchUrl(q))\n    .then(response => {\n      if (response.status === 200) {\n        // Only bother with this XHR response\n        // if this query term matches what we're waiting for.\n        if (q === this.waitingFor) {\n          response.json()\n          .then(results => {\n              this.setState({features: results.features});\n          })\n        }\n      }\n    })\n  }\n\n\n\n  storeSearch = q => {\n    const _searches = this.state._searches || [];\n    _searches.push(q);\n    this.setState({ _searches });\n  }\n\n\n  render() {\n    const _searches = this.state._searches || [];\n    const results = this.state.features.map(x => <div key={x.id}><PlaceName info={x}/></div>);\n    return (\n      <div>\n      \t{results}\n        <input\n          placeholder=\"Type something here\"\n          type=\"text\"\n          value={this.state.q}\n          onChange={this.changeQuery}\n        />\n        <hr />\n        {_searches.length ? (\n          <button\n            type=\"button\"\n            onClick={event => this.setState({ _searches: [] })}\n          >\n            Reset\n          </button>\n        ) : null}\n        <ol>\n          {_searches.map((s, i) => {\n            return <li key={s + i}>{s}</li>;\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}