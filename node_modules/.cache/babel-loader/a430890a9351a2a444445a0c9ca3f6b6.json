{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // CONSTANTS\n\nconst BIKEURL = 'https://www.rideindego.com/stations/json/';\nconst WEATHERURL = createWeatherUrl();\n\nfunction createWeatherUrl() {\n  let baseUrl = 'http://api.openweathermap.org/data/2.5/weather',\n      city = 'Philadelphia',\n      country = 'us',\n      accessToken = 'd795b96fd86f14f35c5a2e8d779bbd6a';\n  return \"\".concat(baseUrl, \"?q=\").concat(city, \",\").concat(country, \"&APPID=\").concat(accessToken);\n}\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(WEATHERURL).then(response => response.json()).then(results => this.setState({\n      temperature: convertKtoF(results.main.temp) + '\\xB0',\n      iconUrl: createIconImgUrl(results.weather[0].icon),\n      weather: results.weather[0].main\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.temperature), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: this.state.iconUrl,\n      alt: \"weather icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.weather));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Weather, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js"],"names":["React","Component","BIKEURL","WEATHERURL","createWeatherUrl","baseUrl","city","country","accessToken","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","Weather","constructor","props","state","temperature","iconUrl","weather","componentDidMount","fetch","then","response","json","results","setState","main","temp","render","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP,C,CAIA;;AAEA,MAAMC,OAAO,GAAG,2CAAhB;AACA,MAAMC,UAAU,GAAGC,gBAAgB,EAAnC;;AAGA,SAASA,gBAAT,GAA2B;AACzB,MAAIC,OAAO,GAAG,gDAAd;AAAA,MACIC,IAAI,GAAG,cADX;AAAA,MAEIC,OAAO,GAAG,IAFd;AAAA,MAGIC,WAAW,GAAG,kCAHlB;AAIE,mBAAUH,OAAV,gBAAuBC,IAAvB,cAA+BC,OAA/B,oBAAgDC,WAAhD;AACH;;AAED,SAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC7B,mDAA0CA,IAA1C;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,SAAOC,IAAI,CAACC,KAAL,CAAW,IAAK,CAAL,IAAUF,MAAM,GAAG,GAAnB,IAA0B,EAArC,EAAyC,CAAzC,CAAP;AACD;;AAID,MAAMG,OAAN,SAAsBf,KAAK,CAACC,SAA5B,CAAqC;AACnCe,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACpB,UAAD,CAAL,CACKqB,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEYG,OAAF,IACJ,KAAKC,QAAL,CAAc;AACZT,MAAAA,WAAW,EAAER,WAAW,CAACgB,OAAO,CAACE,IAAR,CAAaC,IAAd,CAAX,GAAiC,MADlC;AAEZV,MAAAA,OAAO,EAAEX,gBAAgB,CAACkB,OAAO,CAACN,OAAR,CAAgB,CAAhB,EAAmBX,IAApB,CAFb;AAGZW,MAAAA,OAAO,EAAEM,OAAO,CAACN,OAAR,CAAgB,CAAhB,EAAmBQ;AAHhB,KAAd,CAHN;AAQA;;AAEFE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKb,KAAL,CAAWC,WAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AAAG,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,OAApB;AAA6B,MAAA,GAAG,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKF,KAAL,CAAWG,OAAlB,CAHJ,CADF;AAMA;;AA5BiC;;AAgCrC,SAASW,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeA,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\n// CONSTANTS\n\nconst BIKEURL = 'https://www.rideindego.com/stations/json/';\nconst WEATHERURL = createWeatherUrl();\n\n\nfunction createWeatherUrl(){\n  let baseUrl = 'http://api.openweathermap.org/data/2.5/weather',\n      city = 'Philadelphia',\n      country = 'us',\n      accessToken = 'd795b96fd86f14f35c5a2e8d779bbd6a';\n    return `${baseUrl}?q=${city},${country}&APPID=${accessToken}`;\n}\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nclass Weather extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: '',\n    };\n  }\n\n  componentDidMount(){\n    fetch(WEATHERURL)\n        .then(response => response.json())\n        .then(( results ) => \n          this.setState({\n            temperature: convertKtoF(results.main.temp) + '\\xB0',\n            iconUrl: createIconImgUrl(results.weather[0].icon),\n            weather: results.weather[0].main,\n    })\n  )}\n  \n  render() {\n    return (\n      <div className=\"weather\">\n          <span>{this.state.temperature}</span>\n          <span><a href={this.state.iconUrl} alt=\"weather icon\"></a></span>\n          <span>{this.state.weather}</span>\n      </div>\n  )}\n\n\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}