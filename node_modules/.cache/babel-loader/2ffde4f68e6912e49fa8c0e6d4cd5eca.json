{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // CONSTANTS\n\nconst ENDPOINT = 'http://localhost:8000/api/v1/stations/';\n\nfunction createIconImgUrl(icon) {\n  return \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n}\n\nfunction convertKtoF(kelvin) {\n  return Math.round(9 / 5 * (kelvin - 273) + 32, 2);\n}\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(ENDPOINT).then(response => response.json()[0].weather).then(results => this.setState({\n      temperature: convertKtoF(results.main.temp) + '\\xB0',\n      iconUrl: createIconImgUrl(results.weather[0].icon),\n      weather: results.weather[0].main\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.temperature), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.iconUrl,\n      alt: \"weather icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.weather));\n  }\n\n}\n\nclass StationList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stationsList: [],\n      isOrdered: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(ENDPOINT).then(response => response.json()[0].stations.values()).then(function (data) {\n      console.log(data);\n      console.log(typeof data); //     const stationsList = data.map((item) => {\n      //       name: item.properties.name,\n      //       addressStreet: item.properties.addressStreet,\n      //       bikesAvailable:item.properties.bikesAvailable,\n      //       totalDocks:item.properties.totalDocks,\n      //     });\n      //     console.log(stationsList);\n      //     this.setState({\n      //         stationsList,\n      // });\n    });\n  }\n\n  render() {\n    const stations = this.state.stationsList.map(s => React.createElement(\"li\", {\n      key: s.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, s.name));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Stations\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, stations));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Weather, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(StationList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/App.js"],"names":["React","Component","ENDPOINT","createIconImgUrl","icon","convertKtoF","kelvin","Math","round","Weather","constructor","props","state","temperature","iconUrl","weather","componentDidMount","fetch","then","response","json","results","setState","main","temp","render","StationList","stationsList","isOrdered","stations","values","data","console","log","map","s","id","name","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\n// CONSTANTS\nconst ENDPOINT = 'http://localhost:8000/api/v1/stations/'\n\n\nfunction createIconImgUrl(icon){\n  return `http://openweathermap.org/img/w/${icon}.png`\n}\n\nfunction convertKtoF(kelvin){\n  return Math.round(9 /  5 * (kelvin - 273) + 32, 2)\n}\n\n\n\nclass Weather extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: '',\n      iconUrl: '',\n      weather: '',\n    };\n  }\n\n  componentDidMount(){\n    fetch(ENDPOINT)\n        .then(response => response.json()[0].weather)\n        .then((results) => this.setState({\n      temperature: convertKtoF(results.main.temp) + '\\xB0',\n      iconUrl: createIconImgUrl(results.weather[0].icon),\n      weather: results.weather[0].main,\n    })\n  )}\n  \n  render() {\n    return (\n      <div className=\"weather\">\n          <span>{this.state.temperature}</span>\n          <span><img src={this.state.iconUrl} alt=\"weather icon\"></img></span>\n          <span>{this.state.weather}</span>\n      </div>\n  )}\n}\n\nclass StationList extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {\n        stationsList: [],\n        isOrdered: false,\n      };\n  }\n\n  componentDidMount(){\n    fetch(ENDPOINT)\n        .then(response => response.json()[0].stations.values())\n        .then(\n      function (data){\n        console.log(data);\n        console.log(typeof data);\n    //     const stationsList = data.map((item) => {\n    //       name: item.properties.name,\n    //       addressStreet: item.properties.addressStreet,\n    //       bikesAvailable:item.properties.bikesAvailable,\n    //       totalDocks:item.properties.totalDocks,\n    //     });\n    //     console.log(stationsList);\n    //     this.setState({\n    //         stationsList,\n    // });\n  })}\n\n  render(){\n    const stations = this.state.stationsList\n        .map((s)=><li key={s.id}>{s.name}</li>);\n    return (\n      <div>\n          <h2>Stations</h2>\n          <ul>{stations}</ul>\n      </div>\n\n\n\n  )}\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather/>\n      <StationList/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}