{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { CLICK_MARKER, UNCLICK_MARKER, EXPLORE_PANEL, CLICK_PANEL, SEARCH_PANEL, REQUEST_API_DATA, RECEIVE_API_DATA, RECEIVE_API_DATA_SUCCESS, REQUEST_DISTANCE_MATRIX, RECEIVE_DISTANCE_MATRIX_SUCCESS, RECEIVE_DISTANCE_MATRIX_FAILURE } from './actions'; // UI Reducers\n\nfunction copyAndRemove(array, index) {\n  // Copies an array without the element at the index provided\n  return [...array.slice(0, index), ...array.slice(index + 1)];\n}\n\nfunction panel(state = EXPLORE_PANEL, action) {\n  switch (action.type) {\n    case CLICK_PANEL:\n      return action.panel;\n\n    default:\n      return state;\n  }\n}\n\nfunction clickedStations(state = [], action) {\n  switch (action.type) {\n    case CLICK_MARKER:\n      if (!action.isSelected) {\n        return [...state, action.id];\n      } else {\n        let markerIndex = state.indexOf(action.id);\n        return copyAndRemove(state, markerIndex);\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst apiDefaultState = {\n  isFetching: false,\n  bikeTimestamp: null,\n  stationsByID: {},\n  weather: {}\n};\n\nfunction api(state = apiDefaultState, action) {\n  switch (action.type) {\n    case REQUEST_API_DATA:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case RECEIVE_API_DATA_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        bikeTimestamp: action.bikeTimestamp,\n        stationsByID: action.stationsByID,\n        weather: action.weather\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst distanceMatrixDefaultState = {\n  isFetching: false,\n  distanceArray: [],\n  latestCoordinateLookup: []\n};\n\nfunction distanceMatrix(state = distanceMatrixDefaultState, action) {\n  switch (action.type) {\n    case RECEIVE_DISTANCE_MATRIX_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        distanceArray: action.distanceArray\n      });\n\n    case REQUEST_DISTANCE_MATRIX:\n      return Object.assign({}, state, {\n        isFetching: true,\n        latestCoordinateLookup: action.latestCoordinateLookup\n      });\n\n    case RECEIVE_DISTANCE_MATRIX_FAILURE:\n    default:\n      return state;\n  }\n}\n\nconst reduceApp = combineReducers({\n  panel,\n  clickedStations,\n  api,\n  distanceMatrix\n});\nexport default reduceApp;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/reducers.js"],"names":["combineReducers","CLICK_MARKER","UNCLICK_MARKER","EXPLORE_PANEL","CLICK_PANEL","SEARCH_PANEL","REQUEST_API_DATA","RECEIVE_API_DATA","RECEIVE_API_DATA_SUCCESS","REQUEST_DISTANCE_MATRIX","RECEIVE_DISTANCE_MATRIX_SUCCESS","RECEIVE_DISTANCE_MATRIX_FAILURE","copyAndRemove","array","index","slice","panel","state","action","type","clickedStations","isSelected","id","markerIndex","indexOf","apiDefaultState","isFetching","bikeTimestamp","stationsByID","weather","api","Object","assign","distanceMatrixDefaultState","distanceArray","latestCoordinateLookup","distanceMatrix","reduceApp"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\nimport { CLICK_MARKER, \n\t\t UNCLICK_MARKER,\n\t\t EXPLORE_PANEL,\n\t\t CLICK_PANEL,\n\t\t SEARCH_PANEL,\n\t\t REQUEST_API_DATA,\n\t\t RECEIVE_API_DATA,\n\t\t RECEIVE_API_DATA_SUCCESS,\n\t\t REQUEST_DISTANCE_MATRIX,\n\t\t RECEIVE_DISTANCE_MATRIX_SUCCESS,\n\t\t RECEIVE_DISTANCE_MATRIX_FAILURE} from './actions'\n\n// UI Reducers\n\nfunction copyAndRemove(array, index){\n\t// Copies an array without the element at the index provided\n\treturn [...array.slice(0,index), ...array.slice(index+1)]\n}\n\nfunction panel(state=EXPLORE_PANEL, action){\n\tswitch (action.type){\n\t\tcase CLICK_PANEL:\n\t\t\treturn action.panel\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction clickedStations(state=[], action){\n\tswitch (action.type) {\n\t\tcase CLICK_MARKER:\n\t\t\tif ( !action.isSelected ) {\n\t\t\t\treturn [...state, action.id]\n\t\t\t} else {\n\t\t\t\tlet markerIndex = state.indexOf(action.id);\n\t\t\t\treturn copyAndRemove(state, markerIndex)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\n\nconst apiDefaultState = {\n\tisFetching: false,\n\tbikeTimestamp: null,\n\tstationsByID: {},\n\tweather: {}\n}\n\nfunction api(state=apiDefaultState, action){\n\tswitch (action.type){\n\t\tcase REQUEST_API_DATA:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: true\n\t\t\t})\n\t\tcase RECEIVE_API_DATA_SUCCESS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\tbikeTimestamp: action.bikeTimestamp,\n\t\t\t\tstationsByID: action.stationsByID,\n\t\t\t\tweather: action.weather,\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst distanceMatrixDefaultState = {\n\tisFetching: false,\n\tdistanceArray: [],\n\tlatestCoordinateLookup: [],\n}\n\nfunction distanceMatrix(state=distanceMatrixDefaultState, action){\n\tswitch (action.type){\n\t\tcase RECEIVE_DISTANCE_MATRIX_SUCCESS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\tdistanceArray: action.distanceArray,\n\t\t\t})\n\n\t\tcase REQUEST_DISTANCE_MATRIX:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: true,\n\t\t\t\tlatestCoordinateLookup: action.latestCoordinateLookup\n\t\t\t})\n\n\t\tcase RECEIVE_DISTANCE_MATRIX_FAILURE:\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\nconst reduceApp = combineReducers({\n  panel,\n  clickedStations,\n  api,\n  distanceMatrix,\n})\n\nexport default reduceApp;\n\n\n"]},"metadata":{},"sourceType":"module"}