{"ast":null,"code":"import { clickMarker } from '../actions';\nimport { connect } from 'react-redux';\nimport MarkerList from '../components/MarkerList';\n\nconst mapStateToProps = state => {\n  return {\n    markerArray: Object.values(state.api.stationsByID),\n    selectedMarkers: state.clickedStations,\n    panel: state.panel,\n    distanceArray: state.distanceMatrix.distanceArray,\n    latestCoordinateLookup: distanceMatrix\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMarkerClick: (id, isSelected) => {\n      dispatch(clickMarker(id, isSelected));\n    }\n  };\n};\n\nconst MarkerWrapper = connect(mapStateToProps, mapDispatchToProps)(MarkerList);\nexport default MarkerWrapper;","map":{"version":3,"sources":["/Users/elliotgoldingfrank/bikephil-frontend/bikephilreact/src/containers/MarkerWrapper.js"],"names":["clickMarker","connect","MarkerList","mapStateToProps","state","markerArray","Object","values","api","stationsByID","selectedMarkers","clickedStations","panel","distanceArray","distanceMatrix","latestCoordinateLookup","mapDispatchToProps","dispatch","onMarkerClick","id","isSelected","MarkerWrapper"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,GAAN,CAAUC,YAAxB,CADP;AAENC,IAAAA,eAAe,EAAEN,KAAK,CAACO,eAFjB;AAGNC,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAHP;AAINC,IAAAA,aAAa,EAAET,KAAK,CAACU,cAAN,CAAqBD,aAJ9B;AAKNE,IAAAA,sBAAsB,EAAED;AALlB,GAAP;AAMC,CAPF;;AAQA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,aAAa,EAAE,CAACC,EAAD,EAAKC,UAAL,KAAoB;AAACH,MAAAA,QAAQ,CAACjB,WAAW,CAACmB,EAAD,EAAKC,UAAL,CAAZ,CAAR;AAAsC;AADpE,GAAP;AAGA,CAJD;;AAMA,MAAMC,aAAa,GAAGpB,OAAO,CAC5BE,eAD4B,EAE5Ba,kBAF4B,CAAP,CAGpBd,UAHoB,CAAtB;AAKA,eAAemB,aAAf","sourcesContent":["import { clickMarker } from '../actions'\nimport { connect } from 'react-redux'\nimport MarkerList from '../components/MarkerList'\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmarkerArray: Object.values(state.api.stationsByID),\n\t\tselectedMarkers: state.clickedStations,\n\t\tpanel: state.panel,\n\t\tdistanceArray: state.distanceMatrix.distanceArray,\n\t\tlatestCoordinateLookup: distanceMatrix\n}}\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonMarkerClick: (id, isSelected) => {dispatch(clickMarker(id, isSelected))}\n\t}\n}\n\nconst MarkerWrapper = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(MarkerList)\n\nexport default MarkerWrapper"]},"metadata":{},"sourceType":"module"}